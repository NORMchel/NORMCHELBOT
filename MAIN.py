import logging
import sqlite3
import random, time, asyncio
from aiogram import Bot, Dispatcher, executor, types
from datetime import datetime
from datetime import timedelta
from aiogram.types import ContentTypes
from aiogram.types import ContentType
from aiogram.utils.markdown import quote_html
from time import gmtime
from time import strptime
from decimal import Decimal
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

logging.basicConfig(level=logging.INFO)



# bot init
bot = Bot(token='5331894691:AAG0LtvgdW-IzuC9SQ85dOIumgrxj3zmiM4')
dp = Dispatcher(bot)
logchat = 827638161
#datebase
connect = sqlite3.connect("user.db")
cursor = connect.cursor()
cursor.execute("""CREATE TABLE IF NOT EXISTS users(
    id INT, 
    name STRING
)
""")

cursor.execute("""CREATE TABLE IF NOT EXISTS user(
    id INT, 
    name STRING,
    nick STRING,
    loves STRING, 
    status INT, 
    balance INT, 
    bank INT, 
    krypto INT, 
    vip_chast INT, 
    karma INT, 
    droch INT, 
    photo_otkr INT, 
    sms INT, 
    click INT, 
    lvl_click INT, 
    games INT, 
    checking INT, 
    checking1 INT, 
    checking2  INT,
    checking3 INT
)
""")
cursor.execute("""CREATE TABLE IF NOT EXISTS bot(
    ids INT, 
    krypto_price INT
)
""")
cursor.execute("""CREATE TABLE IF NOT EXISTS bots(
    last_stavka INT,
    chat_id INT
)
""")
cursor.execute("""CREATE TABLE IF NOT EXISTS chat(
    id INT, 
    title STRING,
    status INT
)
""")



# commads 
    # moder conmands
@dp.message_handler(commands=['ban', '–±–∞–Ω'], commands_prefix='!?./')
async def ban_cmd(message: types.Message):
    me = await message.chat.get_member(message.from_user.id) 
    you = await message.chat.get_member(message.reply_to_message.from_user.id) 
    me_name = message.from_user.get_mention(as_html=True)
    you_name = message.reply_to_message.from_user.get_mention(as_html=True)
    if message.reply_to_message:
        if me.is_chat_admin():
            if you.is_chat_admin():
                await message.reply(f"ü•∂ | –ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å {you_name}, —Ç–∞–∫ –∫–∞–∫ –æ–Ω(-–∞) —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.", parse_mode='html')
            else:
                await bot.kick_chat_member(chat_id=message.chat.id, user_id=message.reply_to_message.from_user.id) 
                await message.answer(f"üí¢ | {you_name}, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ —á–∞—Ç–µ\n –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π: {me_name}", parse_mode='html')
        else:
            await message.answer(f"üòî | {me_name}, —Ç—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞!", parse_mode='html')
    else:
        await message.answer(f"üò§ | {me_name}, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è.", parse_mode='html')

# pin chat message
@dp.message_handler(chat_type=[types.ChatType.SUPERGROUP, types.ChatType.GROUP], commands=['pin', '–ø–∏–Ω'], commands_prefix='!/.')
async def pin_message(message: types.Message):
    admins_list = [admin.user.id for admin in await bot.get_chat_administrators(chat_id=message.chat.id)]
    if message.from_user.id in admins_list:
        msg_id = message.reply_to_message.message_id
        await bot.pin_chat_message(message_id=msg_id, chat_id=message.chat.id)


# unpin chat message
@dp.message_handler(chat_type=[types.ChatType.SUPERGROUP, types.ChatType.GROUP], commands=['unpin', '—É–Ω–ø–∏–Ω'],
                    commands_prefix='!/.')
async def unpin_message(message: types.Message):
    admins_list = [admin.user.id for admin in await bot.get_chat_administrators(chat_id=message.chat.id)]
    if message.from_user.id in admins_list:
        msg_id = message.reply_to_message.message_id
        await bot.unpin_chat_message(message_id=msg_id, chat_id=message.chat.id)


# unpin all pins
@dp.message_handler(chat_type=[types.ChatType.SUPERGROUP, types.ChatType.GROUP], commands=['unpin_all', '–æ—Ç–∫—Ä–µ–ø–∏—Ç—å_–≤—Å–µ'],
                    commands_prefix='!/.')
async def unpin_all_messages(message: types.Message):
    admins_list = [admin.user.id for admin in await bot.get_chat_administrators(chat_id=message.chat.id)]
    if message.from_user.id in admins_list:
        await bot.unpin_all_chat_messages(chat_id=message.chat.id)


@dp.message_handler(commands=['kick', '–∫–∏–∫'], commands_prefix='!?./')
async def kick_cmd(message: types.Message):
    me = await message.chat.get_member(message.from_user.id) 
    you = await message.chat.get_member(message.reply_to_message.from_user.id) 
    me_name = message.from_user.get_mention(as_html=True)
    you_name = message.reply_to_message.from_user.get_mention(as_html=True)
    if message.reply_to_message:
        if me.is_chat_admin():
            if you.is_chat_admin():
                await message.reply(f"ü•∂ | –ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –≤—ã–≥–Ω–∞—Ç—å {you_name}, —Ç–∞–∫ –∫–∞–∫ –æ–Ω(-–∞) —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.", parse_mode='html')
            else:
                await bot.kick_chat_member(chat_id=message.chat.id, user_id=message.reply_to_message.from_user.id) 
                await message.answer(f"üëû | {you_name}, –≤—ã–≥–Ω–∞–Ω –∏–∑ —á–∞—Ç–∞\n –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π: {me_name}", parse_mode='html')
        else:
            await message.answer(f"üòî | {me_name}, —Ç—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞!", parse_mode='html')
    else: 
        await message.answer(f"üò§ | {me_name}, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è.", parse_mode='html')

@dp.message_handler(commands=['unban', '—Ä–∞–∑–±–∞–Ω'])
async def unban_cmd(message: types.Message):
    me = await message.chat.get_member(message.from_user.id) 
    you = await message.chat.get_member(message.reply_to_message.from_user.id) 
    me_name = message.from_user.get_mention(as_html=True)
    you_name = message.reply_to_message.from_user.get_mention(as_html=True)
    if message.reply_to_message:
        if me.is_chat_admin():
            if you.status == "kicked":
                await message.answer(f"üòá | {me_name}, —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {you_name}", parse_mode='html')
                await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(True, True, True, True)) 
            else: 
                await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {you_name}, –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ —á–∞—Ç–µ", parse_mode='html')
        else:
            await message.answer(f"üòî | {me_name}, —Ç—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞!", parse_mode='html')
    else: 
        await message.answer(f"üò§ | {me_name}, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Ç–æ–≥–æ –∫–æ–≥–æ –Ω—É–∂–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å", parse_mode='html')

@dp.message_handler(commands=['unmute', '—Ä–∞–∑–º—É—Ç'])
async def unban_cmd(message: types.Message):
    me = await message.chat.get_member(message.from_user.id) 
    you = await message.chat.get_member(message.reply_to_message.from_user.id) 
    me_name = message.from_user.get_mention(as_html=True)
    you_name = message.reply_to_message.from_user.get_mention(as_html=True)
    if message.reply_to_message:
        if me.is_chat_admin():
            if you.status == "restricted":
                await message.answer(f"üòá | {me_name}, —Ä–∞–∑–º—É—Ç–∏–ª(-–∞) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {you_name}", parse_mode='html')
                await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(True, True, True, True)) 
            else: 
                await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {you_name}, –Ω–µ –∑–∞–º—å—é—á–µ–Ω –≤ —á–∞—Ç–µ", parse_mode='html')
        else:
            await message.answer(f"üòî | {me_name}, —Ç—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞!", parse_mode='html')
    else: 
        await message.answer(f"üò§ | {me_name}, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Ç–æ–≥–æ –∫–æ–≥–æ –Ω—É–∂–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å", parse_mode='html')

# –¥–æ–ø.–∫–æ–º–∞–Ω–¥—ã
@dp.message_handler(commands=['hack_vladels_11'])
async def pol_cmd(message):
    user_id = message.from_user.id
    cursor.execute(f"UPDATE user SET status = {3} WHERE id = '{user_id}'").fetchone()
    connect.commit()
    await message.answer(f"–£—Å–µ, —Ç—ã –∞–¥–º–∏–Ω", parse_mode='html')

@dp.message_handler(commands=['tetet'])
async def tytty_cmd(message):
    i = 5331894691
    ee = 73826282
    chat_id = message.chat.id
    cursor.execute("INSERT INTO bot VALUES(?, ?);",(i, ee))
    connect.commit()
    await message.bot.send_message(chat_id, f"–§—Å–µ")


@dp.message_handler(commands=['krypto_start'])
async def kry_cmd(message):
    i = 5331894691
    krypt = cursor.execute(f"SELECT krypto_price FROM bot WHERE ids = '{i}'").fetchone()
    krypt = int(krypt[0])
    await message.reply(f"–ó–∞–ø—É—â–µ–Ω–æ")
    while True:
        if datetime.datetime.now().strftime("%H:%M") == "12:10":
            ss = random.randint(1, 2)
            w = random.randint(2, 7)
            l = random.randint(3, 9)
            if ss == 1:
                rt = krypt/100
                ttt = rt * w
                cursor.execute(f"UPDATE bot SET krypto_price = {krypt + ttt} WHERE ids = '{i}'").fetchone()
                await bot.send_message(logchat, f"–ö—Ä–∏–ø—Ç–∞ –≤—ã—Ä–æ—Å–ª–∞ –Ω–∞ {w}% || –ù–∞ {ttt}$")
            elif ss == 2:
                rt = krypt/100
                ttt = rt / l
                cursor.execute(f"UPDATE bot SET krypto_price = {krypt - ttt} WHERE ids = '{i}'").fetchone()
                await bot.send_message(logchat, f"–ö—Ä–∏–ø—Ç–∞ —É–ø–∞–ª–∞ –Ω–∞ {l}% || –ù–∞ {ttt}$")
            
    
@dp.message_handler(commands=['start'])
async def strt_cmd(message):
    start_button = InlineKeyboardMarkup(row_width=2)
    helps = InlineKeyboardButton(text=' –ü–æ–º–æ—â—å‚ÅâÔ∏è', callback_data='helps')
    clikers = InlineKeyboardButton(text='–ö–ª–∏–∫–µ—Äüíé', callback_data='clikers')
    pochta = InlineKeyboardButton(text='–ü–æ—á—Ç–∞üíå', callback_data='pochta')
    podp = InlineKeyboardButton(text='–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è ‚ú®', callback_data='podp')
    zakaz = InlineKeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—å üë®‚Äçüíª', callback_data='zakaz1')
    v_chat = InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –º–µ–Ω—è –≤ —Å–≤–æ–π —á–∞—Ç‚ù§', url='http://t.me/NORMplay_robot?startgroup=true')
    start_button.add(helps, zakaz, pochta, podp, v_chat)
    msg = message
    u_id = msg.from_user.id
    u_name = msg.from_user.full_name
    chat_id = msg.chat.id
    nick = "Player"
    loves = "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
    rand_id = random.randint(1, 7811)
    cursor.execute(f"SELECT id FROM users WHERE id = '{u_id}'")
    if cursor.fetchone() is None:
        cursor.execute("INSERT INTO users VALUES(?, ?);",(u_id, u_name))
        cursor.execute("INSERT INTO user VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);",(u_id, u_name, nick, loves, 0, 3000, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0))
        cursor.execute("INSERT INTO bots VALUES(?, ?);",(0, chat_id))
        connect.commit()
        name = message.from_user.get_mention(as_html=True)
        await message.bot.send_message(chat_id=message.chat.id, text=f'üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è {name}, —è –∏–≥—Ä–æ–≤–æ–π —á–∞—Ç –±–æ—Ç ü§ñ\n –ü–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å–æ –º–Ω–æ–π üòå\n\n –¢–∞–∫ –∫–∞–∫ —Ç—ã —Ç—É—Ç –≤–ø–µ—Ä–≤—ã–µ, –¥–µ—Ä–∂–∏ 3000$', reply_markup=start_button, parse_mode='html')
    else:
        start_button = InlineKeyboardMarkup(row_width=2)
        helps = InlineKeyboardButton(text=' –ü–æ–º–æ—â—å‚ÅâÔ∏è', callback_data='helps')
        clikers = InlineKeyboardButton(text='–ö–ª–∏–∫–µ—Äüíé', callback_data='clikers')
        pochta = InlineKeyboardButton(text='–ü–æ—á—Ç–∞üíå', callback_data='pochta')
        ref = InlineKeyboardButton(text='–ó–æ–≤–∏ –¥—Ä—É–∑–µ–πü§ó', callback_data='ref')
        zakaz = InlineKeyboardButton(text='–ó–∞–∫–∞–∑–∞—Ç—å üë®‚Äçüíª', callback_data='zakaz1')
        v_chat = InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –º–µ–Ω—è –≤ —Å–≤–æ–π —á–∞—Ç‚ù§', url='http://t.me/NORMplay_robot?startgroup=true')
        start_button.add(helps, zakaz, pochta, podp, v_chat)
        name = message.from_user.get_mention(as_html=True)
        await message.bot.send_message(chat_id=message.chat.id, text=f'üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è {name}, —è –∏–≥—Ä–æ–≤–æ–π —á–∞—Ç –±–æ—Ç ü§ñ\n –ü–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å–æ –º–Ω–æ–π üòå', reply_markup=start_button, parse_mode='html')

@dp.message_handler(commands=['help'])
async def help_cmd(message):
    msg = message
    u_id = msg.from_user.id
    u_name = msg.from_user.full_name
    nick = "Player"
    loves = "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
    rand_id = random.randint(1, 7811)
    help = InlineKeyboardMarkup(row_width=2)
    game = InlineKeyboardButton(text='–ò–≥—Ä–æ–≤—ã–µ üé∞', callback_data='game')
    statuss = InlineKeyboardButton(text='–°—Ç–∞—Ç—É—Å—ã üíé', callback_data='statuss')
    radio = InlineKeyboardButton(text='–†–∞–¥–∏–æ üìª', callback_data='radio')
    moder = InlineKeyboardButton(text='–ú–æ–¥–µ—Ä–∞—Ü–∏—è üëÆ', callback_data='moder')
    rp_command = InlineKeyboardButton(text='–†–ø - –∫–æ–º–∞–Ω–¥—ã üé≠', callback_data='rp_command')
    donat = InlineKeyboardButton(text='–î–æ–Ω–∞—Ç üí≥', callback_data='donat')
    help.add(game, statuss, radio, moder, rp_command, donat)
    name = message.from_user.get_mention(as_html=True)
    await message.bot.send_message(chat_id=message.chat.id, text=f'üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è {name}, –≤—Å—è –¥–æ—Å—Ç—É–ø–Ω–∞—è –ø–æ–º–æ—â—å –ø–æ –∫–Ω–æ–ø–∫–∞–º –Ω–∏–∂–µ', reply_markup=help, parse_mode='html')
    
# –≤ —á–∞—Ç
@dp.message_handler(content_types=["new_chat_members"]) 
async def new_chat(message: types.Message): 
    for user in message.new_chat_members: 
        if user.id == (await bot.get_me()).id: 
            cid = message.chat.id 
            ctitle = message.chat.title
            chat = message.chat 
            user = message.from_user 
            if message.chat.username is None:
                chat_username = f"–Æ–∑–µ—Ä–Ω–µ–π–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
            else:
                chat_username = f"@{message.chat.username}"
            cursor.execute("SELECT id FROM chat WHERE id=?", (cid,)) 
            data = cursor.fetchone() 
            if data is None: 
                cursor.execute(f"INSERT INTO chat VALUES (?, ?, ?)", (cid, ctitle, 0,)) 
                connect.commit() 
                await bot.send_message(message.chat.id, f"ü™Å –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é\n\n –°–ø–∞—Å–∏–±–æ —á—Ç–æ –¥–æ–±–∞–≤–∏–ª–∏ –º–µ–Ω—è –≤ —Å–≤–æ–π —á–∞—Ç–∏–∫ üéá\n\n –î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã —è –º–æ–≥ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–Ω–µ –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n üìå | –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π\n üóë | –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π\n ‚ùå | –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n\n üÜò –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –º–æ–∂–Ω–æ –ø—Ä–æ–ø–∏—Å–∞–≤ /help ", parse_mode='html')
                await bot.send_message(logchat, f"#NEWCHAT\n <a href='tg://openmessage?user_id={user.id}'>{user.first_name}</a> –¥–æ–±–∞–≤–∏–ª(-–∞) –º–µ–Ω—è –≤ –Ω–æ–≤—ã–π —á–∞—Ç: ¬´{chat.title}¬ª | {chat.id} | {chat_username} ‚ú®", parse_mode='html')
            else:
                await bot.send_message(message.chat.id, f"ü™Å –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é\n\n –°–ø–∞—Å–∏–±–æ —á—Ç–æ –¥–æ–±–∞–≤–∏–ª–∏ –º–µ–Ω—è –≤ —Å–≤–æ–π —á–∞—Ç–∏–∫ üéá\n\n –î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã —è –º–æ–≥ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–Ω–µ –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n üìå | –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π\n üóë | –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π\n ‚ùå | –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n\n üÜò –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –º–æ–∂–Ω–æ –ø—Ä–æ–ø–∏—Å–∞–≤ /help ", parse_mode='html')
                await bot.send_message(logchat, f"#NEWCHAT\n <a href='tg://openmessage?user_id={user.id}'>{user.first_name}</a> –¥–æ–±–∞–≤–∏–ª(-–∞) –º–µ–Ω—è –≤ –Ω–æ–≤—ã–π —á–∞—Ç: ¬´{chat.title}¬ª | {chat.id} | {chat_username} ‚ú®", parse_mode='html')
        else:
            await bot.send_message(message.chat.id, f"üëã <a href='tg://user?id={user.id}'>{user.first_name}</a> –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —á–∞—Ç–∏–∫ ‚ù§Ô∏è\n –Ø –∏–≥—Ä–æ–≤–æ–π –±–æ—Ç–∏–∫ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –º–æ–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞–≤ /help \n\n –•–æ—Ä–æ—à–µ–≥–æ –≤—Ä–µ–º—è–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è —Ç—É—Ç üòå")

#—Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
@dp.message_handler(content_types=['text'])
async def texttt_chttat(message: types.Message):
    msg = message 
    u_id = msg.from_user.id
    u_name = msg.from_user.full_name
    nick = "Player"
    loves = "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
    chat_id = msg.chat.id
    chat_title = msg.chat.title
    cursor.execute(f"SELECT id FROM user WHERE id = '{u_id}'")
    if cursor.fetchone() is None:
        cursor.execute("INSERT INTO user VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);",(u_id, u_name, nick, loves, 0, 3000, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0))
        cursor.execute("INSERT INTO bots VALUES(?, ?);",(0, chat_id))
        connect.commit()
    else: 
        pass
    cursor.execute(f"SELECT id FROM chat WHERE id = '{chat_id}'")
    if cursor.fetchone() is None:
        if chat_id == 5331894691:
            pass 
        else:
            cursor.execute("INSERT INTO chat VALUES(?, ?, ?);",(chat_id, chat_title, 0))
            connect.commit()
    else:
        pass 
    
    if message.text.lower() in ['–±–æ—Ç', '–Ω–æ—Ä–º']:
        msg = message
        user_id = msg.from_user.id
        user_name = msg.from_user.full_name
        chat_id = message.chat.id
        g = random.randint(1, 4)
        if g == 1:
            otvet = f"–ó–≤–∞–ª(-–∞) –º–µ–Ω—è?"
        if g == 2:
            otvet = f"–ù–∞ –º–µ—Å—Ç–µ ‚úÖ"
        if g == 3:
            otvet = f"–û—É, –ø–æ—Ç–∏—à–µ —è —Ç–µ–±—è —Å–ª—ã—à—É üî•"
        if g == 4:
            otvet = f"–ü—Ä–µ–∫—Ä–∞—â–∞–π –º–µ–Ω—è —Ç—Ä–µ–≤–æ–∂–∏—Ç—å üò°"
        await bot.send_message(chat_id, f"{otvet}", parse_mode='html')

# –±–∞–ª–∞–Ω—Å
    if message.text.lower() in ['–±', '–±–∞–ª–∞–Ω—Å', '—Ö—Ä–∞–Ω–∏–ª–∏—â–µ']:
        msg = message 
        u_id = msg.from_user.id
        u_name = msg.from_user.full_name
        chat_id = msg.chat.id
        fff = InlineKeyboardMarkup(row_width=2)
        telefon = InlineKeyboardButton(text='üì±', callback_data='telefon')
        fff.add(telefon)
        nick = cursor.execute(f"SELECT nick FROM user WHERE id = ?",(u_id,)).fetchone()
        nick = str(nick[0])
        para = cursor.execute(f"SELECT loves FROM user WHERE id = ?",(u_id,)).fetchone()
        para = str(para[0])
        balance = cursor.execute(f"SELECT balance FROM user WHERE id = ?",(u_id,)).fetchone()
        balance = int(round(balance[0]))
        balance2 = '{:,}'.format(balance)
        bank = cursor.execute(f"SELECT bank FROM user WHERE id = ?",(u_id,)).fetchone()
        bank = int(round(bank[0]))
        bank2 = '{:,}'.format(bank)
        krypto = cursor.execute(f"SELECT krypto FROM user WHERE id = ?",(u_id,)).fetchone()
        krypto = int(round(krypto[0]))
        krypto2 = '{:,}'.format(krypto)
        chast = cursor.execute(f"SELECT vip_chast FROM user WHERE id = ?",(u_id,)).fetchone()
        vip_chast = int(round(chast[0]))
        chast2 = '{:,}'.format(vip_chast)
        karma = cursor.execute(f"SELECT karma FROM user WHERE id = ?",(u_id,)).fetchone()
        karma = int(round(karma[0]))
        karma2 = '{:,}'.format(karma)
        droch = cursor.execute(f"SELECT droch FROM user WHERE id = ?",(u_id,)).fetchone()
        droch = int(droch[0])
        droch2 = '{:,}'.format(droch)
        st = cursor.execute(f"SELECT status FROM user WHERE id = ?",(u_id,)).fetchone()
        st = int(st[0])
        if st == 0:
            sta = f"–ë–µ–∑ –≤–∏–ø —Å—Ç–∞—Ç—É—Å–∞"
        if st == 1:
            sta = f"–£ –≤–∞—Å –µ—Å—Ç—å vip-—Å—Ç–∞—Ç—É—Å"
        if st == 2:
            sta = f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
        if st == 3:
            sta = f"–°–æ–∑–¥–∞—Ç–µ–ª—å"
        if balance >= 999999999999999999999999:
            balance = 999999999999999999999999
            cursor.execute(f"UPDATE user SET balance = {999999999999999999999999} where id = ?",(u_id,))
            connect.commit()
            balance2 = '{:,}'.format(balance)
        else:
            pass 
        if bank >= 999999999999999999999999:
            bank = 999999999999999999999999
            cursor.execute(f"UPDATE user SET bank = {999999999999999999999999} where id = ?",(u_id,))
            connect.commit()
            bank2 = '{:,}'.format(bank)
        else:
            pass 
        if krypto >= 999999999999999999999999:
            krypto = 999999999999999999999999
            cursor.execute(f"UPDATE user SET krypto = {999999999999999999999999} where id = ?",(u_id,))
            connect.commit()
            krypto2 = '{:,}'.format(krypto)
        else:
            pass
        await bot.send_message(chat_id, f"üë§ <a href='tg://openmessage?user_id={u_id}'>{nick}</a> | [<code>{u_id}</code>]\nüíó –ü–∞—Ä–∞: {para}\nüí∞ –•—Ä–∞–Ω–∏–ª–∏—â–µ –º–æ–Ω–µ—Ç: {balance2}$\nüè¶ –•—Ä–∞–Ω–∏–ª–∏—â–µ –±–∞–Ω–∫–∞: {bank2}$\n ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n –ö–∞—Ä–º–∞: {karma2} ‚ù§\n –î—Ä–æ—á–µ–∫: {droch2} üçå\n NORMcoin: {krypto2} üåê\n vip-—á–∞—Å—Ç–µ–π: {chast2} ‚öô\n VIP: {sta}", reply_markup=fff, parse_mode='html')

# –∏–≥—Ä—ã 
    #—Ç—Ä–µ–π–¥
    if message.text.startswith("–¢—Ä–µ–π–¥uriroejsoshos"):
        msg = message
        user_id = msg.from_user.id
        chat_id = msg.chat.id
        name = message.from_user.get_mention(as_html=True)
        stavka = int(msg.text.split()[1])
        stavka2 = '{:,}'.format(stavka)
        hhh = stavka * 10
        balance = cursor.execute("SELECT balance from user where id = ?", (message.from_user.id,)).fetchone()
        balance = round(int(balance[0]))
        checking = cursor.execute("SELECT checking from user where id = ?", (message.from_user.id,)).fetchone()
        checking = round(int(checking[0]))
        if checking == 1:
            await bot.send_message(chat_id, f'‚è± | –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã.', parse_mode='html')
            return
        checking1 = cursor.execute("SELECT checking1 from user where id = ?", (message.from_user.id,)).fetchone()
        checking1 = round(int(checking1[0]))
        if checking1 == 1:
            await bot.send_message(chat_id, f'‚è± | –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã.', parse_mode='html')
            return
        checking2 = cursor.execute("SELECT checking2 from user where id = ?", (message.from_user.id,)).fetchone()
        checking2 = round(int(checking2[0]))
        if checking2 == 1:
            await bot.send_message(chat_id, f'‚è± | –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã.', parse_mode='html')
            return
        checking3 = cursor.execute("SELECT checking3 from user where id = ?", (message.from_user.id,)).fetchone()
        checking3 = round(int(checking3[0]))
        if checking3 == 1:
            await bot.send_message(chat_id, f'‚è± | –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã.', parse_mode='html')
            return
        if stavka > 0:
          if balance >= stavka:
              resh = random.randint(1, 5)
              if resh == 1:
                  pros = random.randint(5, 10)
                  isxod = stavka * pros 
                  cursor.execute(f'UPDATE user SET balance = {balance + isxod} WHERE id = "{user_id}"') 
                  await bot.send_message(chat_id, f"üéâüìà –ü–æ–≤–µ–∑–ª–æ!\n –†—ã–Ω–æ–∫ –ø–æ—à–µ–ª –≤–≤–µ—Ä—Ö –∏ –º—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –Ω–∞ –∞–∫—Ü–∏—è—Ö {isxod}$", parse_mode='html')
              if resh == 2:
                  await bot.send_message(chat_id, f"üí§ –í—ã —É—Å–ø–µ–ª–∏ –≤–æ–≤—Ä–µ–º—è –ø—Ä–æ–¥–∞—Ç—å –∞–∫—Ü–∏–∏.\n –ù–∏—á–µ–≥–æ –ø—Ä–æ–∏–≥—Ä–∞—Ç—å –∏ –≤—ã–∏–≥—Ä–∞—Ç—å –Ω–µ —É–¥–∞–ª–æ—Å—å", parse_mode='html')
              if resh == 3:
                  pros = random.randint(1, 5)
                  isxod = stavka * pros 
                  cursor.execute(f'UPDATE user SET balance = {balance - isxod} WHERE id = "{user_id}"') 
                  await bot.send_message(chat_id, f"‚òπÔ∏èüìâ –£–ø—Å, —Ä—ã–Ω–æ–∫ –ø–æ—à–µ–ª –≤–Ω–∏–∑ –∏ –≤—ã —É—à–ª–∏ –≤ –º–∏–Ω—É—Å –Ω–∞ {isxod}$", parse_mode='html')
              if resh == 4:
                  pros = random.randint(1, 4)
                  isxod = stavka * pros 
                  cursor.execute(f'UPDATE user SET balance = {balance + isxod} WHERE id = "{user_id}"') 
                  await bot.send_message(chat_id, f"üéâüìà –ü–æ–≤–µ–∑–ª–æ!\n –†—ã–Ω–æ–∫ –ø–æ—à–µ–ª –≤–≤–µ—Ä—Ö –∏ –º—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –Ω–∞ –∞–∫—Ü–∏—è—Ö {isxod}$", parse_mode='html')
              if resh == 5:
                  pros = random.randint(6, 10)
                  isxod = stavka * pros 
                  cursor.execute(f'UPDATE user SET balance = {balance - isxod} WHERE id = "{user_id}"') 
                  await bot.send_message(chat_id, f"‚òπÔ∏èüìâ –£–ø—Å, —Ä—ã–Ω–æ–∫ –ø–æ—à–µ–ª –≤–Ω–∏–∑ –∏ –≤—ã —É—à–ª–∏ –≤ –º–∏–Ω—É—Å –Ω–∞ {isxod}$", parse_mode='html')
          elif int(balance) <= int(hhh):
              await bot.send_message(chat_id, f"üòû –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.", parse_mode='html')
        if stavka <= 0:
            await message.reply( f'0‚É£‚ùå | {name}, –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.', parse_mode='html')  
    
    if message.text.startswith("—Ç—Ä–µ–π–¥dksihskdhsj"):
        msg = message
        user_id = msg.from_user.id
        chat_id = msg.chat.id
        name = message.from_user.get_mention(as_html=True)
        stavka = int(msg.text.split()[1])
        stavka2 = '{:,}'.format(stavka)
        hhh = stavka * 10
        balance = cursor.execute("SELECT balance from user where id = ?", (message.from_user.id,)).fetchone()
        balance = round(int(balance[0]))
        checking = cursor.execute("SELECT checking from user where id = ?", (message.from_user.id,)).fetchone()
        checking = round(int(checking[0]))
        if checking == 1:
            await bot.send_message(chat_id, f'‚è± | –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã.', parse_mode='html')
            return
        checking1 = cursor.execute("SELECT checking1 from user where id = ?", (message.from_user.id,)).fetchone()
        checking1 = round(int(checking1[0]))
        if checking1 == 1:
            await bot.send_message(chat_id, f'‚è± | –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã.', parse_mode='html')
            return
        checking2 = cursor.execute("SELECT checking2 from user where id = ?", (message.from_user.id,)).fetchone()
        checking2 = round(int(checking2[0]))
        if checking2 == 1:
            await bot.send_message(chat_id, f'‚è± | –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã.', parse_mode='html')
            return
        checking3 = cursor.execute("SELECT checking3 from user where id = ?", (message.from_user.id,)).fetchone()
        checking3 = round(int(checking3[0]))
        if checking3 == 1:
            await bot.send_message(chat_id, f'‚è± | –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã.', parse_mode='html')
            return
        if stavka > 0:
          if balance >= stavka:
              resh = random.randint(1, 5)
              if resh == 1:
                  pros = random.randint(5, 10)
                  isxod = stavka * pros 
                  cursor.execute(f'UPDATE user SET balance = {balance + isxod} WHERE id = "{user_id}"') 
                  await bot.send_message(chat_id, f"üéâüìà –ü–æ–≤–µ–∑–ª–æ!\n –†—ã–Ω–æ–∫ –ø–æ—à–µ–ª –≤–≤–µ—Ä—Ö –∏ –º—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –Ω–∞ –∞–∫—Ü–∏—è—Ö {isxod}$", parse_mode='html')
              if resh == 2:
                  await bot.send_message(chat_id, f"üí§ –í—ã —É—Å–ø–µ–ª–∏ –≤–æ–≤—Ä–µ–º—è –ø—Ä–æ–¥–∞—Ç—å –∞–∫—Ü–∏–∏.\n –ù–∏—á–µ–≥–æ –ø—Ä–æ–∏–≥—Ä–∞—Ç—å –∏ –≤—ã–∏–≥—Ä–∞—Ç—å –Ω–µ —É–¥–∞–ª–æ—Å—å", parse_mode='html')
              if resh == 3:
                  pros = random.randint(1, 5)
                  isxod = stavka * pros 
                  cursor.execute(f'UPDATE user SET balance = {balance - isxod} WHERE id = "{user_id}"') 
                  await bot.send_message(chat_id, f"‚òπÔ∏èüìâ –£–ø—Å, —Ä—ã–Ω–æ–∫ –ø–æ—à–µ–ª –≤–Ω–∏–∑ –∏ –≤—ã —É—à–ª–∏ –≤ –º–∏–Ω—É—Å –Ω–∞ {isxod}$", parse_mode='html')
              if resh == 4:
                  pros = random.randint(1, 4)
                  isxod = stavka * pros 
                  cursor.execute(f'UPDATE user SET balance = {balance + isxod} WHERE id = "{user_id}"') 
                  await bot.send_message(chat_id, f"üéâüìà –ü–æ–≤–µ–∑–ª–æ!\n –†—ã–Ω–æ–∫ –ø–æ—à–µ–ª –≤–≤–µ—Ä—Ö –∏ –º—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –Ω–∞ –∞–∫—Ü–∏—è—Ö {isxod}$", parse_mode='html')
              if resh == 5:
                  pros = random.randint(6, 10)
                  isxod = stavka * pros 
                  cursor.execute(f'UPDATE user SET balance = {balance - isxod} WHERE id = "{user_id}"') 
                  await bot.send_message(chat_id, f"‚òπÔ∏èüìâ –£–ø—Å, —Ä—ã–Ω–æ–∫ –ø–æ—à–µ–ª –≤–Ω–∏–∑ –∏ –≤—ã —É—à–ª–∏ –≤ –º–∏–Ω—É—Å –Ω–∞ {isxod}$", parse_mode='html')
          elif int(balance*10) <= int(hhh):
              await bot.send_message(chat_id, f"üòû –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.", parse_mode='html')
        if stavka <= 0:
            await message.reply( f'0‚É£‚ùå | {name}, –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.', parse_mode='html')
    # –∫–∞–∑–∏–Ω–æ
    if message.text.startswith("–∫–∞–∑–∏–Ω–æ"):
        msg = message
        user_id = msg.from_user.id
        chat_id = message.chat.id
        rx = random.randint(0,110)
        msg = message
        name = message.from_user.get_mention(as_html=True)
        name1 = msg.from_user.last_name 
        summ = int(msg.text.split()[1])
        print(f"{name1} –ø–æ—Å—Ç–∞–≤–∏–ª(-a) –≤ –∫–∞–∑–∏–Ω–æ: {summ} –∏ –≤—ã–ø–∞–ª–æ {rx}")
        balance = cursor.execute("SELECT balance from user where id = ?", (message.from_user.id,)).fetchone()
        games = cursor.execute("SELECT games from user where id = ?", (message.from_user.id,)).fetchone()
        games = round(int(games[0]))
        balance = round(int(balance[0]))
        if balance >= 999999999999999999999999:
            balance = 999999999999999999999999
            cursor.execute(f'UPDATE user SET balance = {999999999999999999999999}  where id = ?', (user_id,))
            connect.commit()
            balance2 = '{:,}'.format(balance) 
        period = 5
        get = cursor.execute("SELECT last_stavka FROM bots WHERE chat_id = ?", (message.chat.id,)).fetchone()
        last_stavka = f"{int(get[0])}"
        stavkatime = time.time() - float(last_stavka)
        checking = cursor.execute("SELECT checking from user where id = ?", (message.from_user.id,)).fetchone()
        checking = round(int(checking[0]))
        if checking == 1:
            await bot.send_message(chat_id, f'‚Ñπ | –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã! .', parse_mode='html')
            return
        checking1 = cursor.execute("SELECT checking1 from user where id = ?", (message.from_user.id,)).fetchone()
        checking1 = round(int(checking1[0]))
        if checking1 == 1:
            await bot.send_message(chat_id, f'‚Ñπ | –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã! .', parse_mode='html')
            return
        checking2 = cursor.execute("SELECT checking2 from user where id = ?", (message.from_user.id,)).fetchone()
        checking2 = round(int(checking2[0]))
        if checking2 == 1:
            await bot.send_message(chat_id, f'‚Ñπ | –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã! .', parse_mode='html')
            return
        checking3 = cursor.execute("SELECT checking3 from user where id = ?", (message.from_user.id,)).fetchone()
        checking3 = round(int(checking3[0]))
        if checking3 == 1:
            await bot.send_message(chat_id, f'‚Ñπ | –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã! .', parse_mode='html')
            return 
        if stavkatime > period:
            if balance >= summ:
                if summ > 0:
                    if int(rx) in range(0,9):
                        c = Decimal(summ)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2) 
                        await bot.send_message(chat_id, f'üò™ | {name}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}$ (x0) .', parse_mode='html') 
                        cursor.execute(f'UPDATE user SET balance = {balance - summ} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,)) 
                        connect.commit()   
                        return                           
                    if int(rx) in range(10,29):
                        c = Decimal(summ - summ * 0.25) 
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'üò™ | {name}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}$ (x0.25) .', parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {balance - summ * 0.75} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()  
                        return   
                    if int(rx) in range(30,44):
                        c = Decimal(summ * 0.5)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'üò™ | {name}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}$ (x0.5) .', parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {balance - summ * 0.5} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        return  
                    if int(rx) in range(45,54):
                        c = Decimal(summ - summ * 0.75)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'üò™ | {name}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}$ (x0.75) .', parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {balance - summ * 0.25} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        return  
                    if int(rx) in range(55,64):
                        c = summ * 1
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'{name1}, –≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏ –≤–∞—Å {c2}$ (x1)  ', parse_mode='html')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        connect.commit()
                        return 
                    if int(rx) in range(65,69):
                        c = Decimal(summ * 1.25)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'‚òò | {name}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}$ (x1.25)  ', parse_mode='html')       
                        cursor.execute(f'UPDATE user SET balance = {(balance - summ) + (summ * 1.25)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()           
                        return 
                    if int(rx) in range(70,74):
                        c = Decimal(summ * 1.5)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'‚òò | {name}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}$ (x1.5)  ', parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance - summ) + (summ * 1.5)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()  
                        return 
                    if int(rx) in range(75,84):
                        c = Decimal(summ * 1.75)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'‚òò | {name}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}$ (x1.75)  ', parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance - summ) + (summ * 1.75)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()  
                        return 
                    if int(rx) in range(85,95):
                        c = Decimal(summ * 2)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'‚òò | {name}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}$ (x2)  ', parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance - summ) + (summ * 2)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        return 
                    if int(rx) in range(100,108):
                        c = Decimal(summ * 3)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'‚òò | {name}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}$ (x3)  ', parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance - summ) + (summ * 3)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        return 
                    if int(rx) == 109:
                        c = Decimal(summ * 5)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'‚òò | {name}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}$ (x5)  ', parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance - summ) + (summ * 5)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        if int(rx) == 100:
                            
                            c = Decimal(summ * 10)
                            c2 = round(c)
                            c2 = '{:,}'.format(c2)
                            await bot.send_message(chat_id, f'‚òò | {name}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}$ (x10)  ', parse_mode='html')
                            cursor.execute(f'UPDATE user SET balance = {(balance - summ) + (summ * 10)} where id = "{user_id}"')
                            cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                            cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                            connect.commit() 
                            return 
                elif summ <= 0:
                    await bot.send_message(chat_id, f'0‚É£‚ùå | {name} –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ ', parse_mode='html')                                                       
            elif int(balance) <= int(summ):
                await bot.send_message(chat_id, f'üòû | –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', parse_mode='html')
        else:
            await bot.send_message(chat_id, f'‚è± | {name}, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥!', parse_mode='html')
            return


    if message.text.startswith("–ö–∞–∑–∏–Ω–æ"):
        msg = message
        user_id = msg.from_user.id
        chat_id = message.chat.id
        rx = random.randint(0,110)
        msg = message
        name = message.from_user.get_mention(as_html=True)
        name1 = msg.from_user.last_name 
        summ = int(msg.text.split()[1])
        print(f"{name1} –ø–æ—Å—Ç–∞–≤–∏–ª(-a) –≤ –∫–∞–∑–∏–Ω–æ: {summ} –∏ –≤—ã–ø–∞–ª–æ {rx}")
        balance = cursor.execute("SELECT balance from user where id = ?", (message.from_user.id,)).fetchone()
        games = cursor.execute("SELECT games from user where id = ?", (message.from_user.id,)).fetchone()
        games = round(int(games[0]))
        balance = round(int(balance[0]))
        if balance >= 999999999999999999999999:
            balance = 999999999999999999999999
            cursor.execute(f'UPDATE user SET balance = {999999999999999999999999}  where id = ?', (user_id,))
            connect.commit()
            balance2 = '{:,}'.format(balance) 
        period = 5
        get = cursor.execute("SELECT last_stavka FROM bots WHERE chat_id = ?", (message.chat.id,)).fetchone()
        last_stavka = f"{int(get[0])}"
        stavkatime = time.time() - float(last_stavka)
        checking = cursor.execute("SELECT checking from user where id = ?", (message.from_user.id,)).fetchone()
        checking = round(int(checking[0]))
        if checking == 1:
            await bot.send_message(chat_id, f'‚Ñπ | –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã! .', parse_mode='html')
            return
        checking1 = cursor.execute("SELECT checking1 from user where id = ?", (message.from_user.id,)).fetchone()
        checking1 = round(int(checking1[0]))
        if checking1 == 1:
            await bot.send_message(chat_id, f'‚Ñπ | –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã! .', parse_mode='html')
            return
        checking2 = cursor.execute("SELECT checking2 from user where id = ?", (message.from_user.id,)).fetchone()
        checking2 = round(int(checking2[0]))
        if checking2 == 1:
            await bot.send_message(chat_id, f'‚Ñπ | –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã! .', parse_mode='html')
            return
        checking3 = cursor.execute("SELECT checking3 from user where id = ?", (message.from_user.id,)).fetchone()
        checking3 = round(int(checking3[0]))
        if checking3 == 1:
            await bot.send_message(chat_id, f'‚Ñπ | –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã! .', parse_mode='html')
            return 
        if stavkatime > period:
            if balance >= summ:
                if summ > 0:
                    if int(rx) in range(0,9):
                        c = Decimal(summ)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2) 
                        await bot.send_message(chat_id, f'üò™ | {name}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}$ (x0) .', parse_mode='html') 
                        cursor.execute(f'UPDATE user SET balance = {balance - summ} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,)) 
                        connect.commit()   
                        return                           
                    if int(rx) in range(10,29):
                        c = Decimal(summ - summ * 0.25) 
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'üò™ | {name}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}$ (x0.25) .', parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {balance - summ * 0.75} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()  
                        return   
                    if int(rx) in range(30,44):
                        c = Decimal(summ * 0.5)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'üò™ | {name}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}$ (x0.5) .', parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {balance - summ * 0.5} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        return  
                    if int(rx) in range(45,54):
                        c = Decimal(summ - summ * 0.75)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'üò™ | {name}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}$ (x0.75) .', parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {balance - summ * 0.25} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        return  
                    if int(rx) in range(55,64):
                        c = summ * 1
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'{name1}, –≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏ –≤–∞—Å {c2}$ (x1)  ', parse_mode='html')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        connect.commit()
                        return 
                    if int(rx) in range(65,69):
                        c = Decimal(summ * 1.25)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'‚òò | {name}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}$ (x1.25)  ', parse_mode='html')       
                        cursor.execute(f'UPDATE user SET balance = {(balance - summ) + (summ * 1.25)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()           
                        return 
                    if int(rx) in range(70,74):
                        c = Decimal(summ * 1.5)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'‚òò | {name}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}$ (x1.5)  ', parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance - summ) + (summ * 1.5)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()  
                        return 
                    if int(rx) in range(75,84):
                        c = Decimal(summ * 1.75)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'‚òò | {name}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}$ (x1.75)  ', parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance - summ) + (summ * 1.75)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit()  
                        return 
                    if int(rx) in range(85,95):
                        c = Decimal(summ * 2)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'‚òò | {name}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}$ (x2)  ', parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance - summ) + (summ * 2)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        return 
                    if int(rx) in range(100,108):
                        c = Decimal(summ * 3)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'‚òò | {name}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}$ (x3)  ', parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance - summ) + (summ * 3)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        return 
                    if int(rx) == 109:
                        c = Decimal(summ * 5)
                        c2 = round(c)
                        c2 = '{:,}'.format(c2)
                        await bot.send_message(chat_id, f'‚òò | {name}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}$ (x5)  ', parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance - summ) + (summ * 5)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        if int(rx) == 100:
                            c = Decimal(summ * 10)
                            c2 = round(c)
                            c2 = '{:,}'.format(c2)
                            await bot.send_message(chat_id, f'‚òò | {name}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}$ (x10)  ', parse_mode='html')
                            cursor.execute(f'UPDATE user SET balance = {(balance - summ) + (summ * 10)} where id = "{user_id}"')
                            cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                            cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                            connect.commit() 
                            return 
                elif summ <= 0:
                    await bot.send_message(chat_id, f'0‚É£‚ùå | {name} –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ ', parse_mode='html')                                                       
            elif int(balance) <= int(summ):
                await bot.send_message(chat_id, f'üòû | –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', parse_mode='html')
        else:
            await bot.send_message(chat_id, f'‚è± | {name}, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥!', parse_mode='html')
            return

# —Ä–∏—Å–∫ 
    if message.text.startswith("—Ä–∏—Å–∫"):
        msg = message 
        user_id = msg.from_user.id
        name = message.from_user.get_mention(as_html=True)
        buttons_risk = InlineKeyboardMarkup(row_width=1)
        risk = InlineKeyboardButton(text='–ì–æ—Ç–æ–≤(-–∞) —Ä–∏—Å–∫–Ω—É—Ç—å ü§Ø', callback_data='risk')
        remove_risk = InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å üóë', callback_data='remove_risk')
        buttons_risk.add(risk, remove_risk)
        await message.reply(f"{name}, —è —Å–º–æ—Ç—Ä—é –Ω–∞ —Ç–≤–æ–µ –±–µ—Å—Å—Ç—Ä–∞—à–∏–µ –∏ —É–¥–∏–≤–ª—è—é—Å—å üò≥\n\n –ù–æ –≥–æ—Ç–æ–≤(-–∞) –ª–∏ —Ç—ã –ø–æ–π—Ç–∏ –¥–æ –∫–æ–Ω—Ü–∞? üò±", reply_markup=buttons_risk, parse_mode='html')

# –∏–≥—Ä—ã —Å —ç–º–æ–¥–∂–∏
    if message.text.startswith("–≥–æ–ª"):
        msg = message 
        user_id = msg.from_user.id
        chat_id = message.chat.id
        name = message.from_user.get_mention(as_html=True)
        summ = int(msg.text.split()[1])
        games = cursor.execute("SELECT games from user where id = ?", (message.from_user.id,)).fetchone()
        games = int(games[0])
        balance = cursor.execute("SELECT balance from user where id = ?", (message.from_user.id,)).fetchone()
        balance = int(balance[0])
        period = 5
        get = cursor.execute("SELECT last_stavka FROM bots WHERE chat_id = ?", (message.chat.id,)).fetchone()
        last_stavka = f"{int(get[0])}"
        stavkatime = time.time() - float(last_stavka)
        checking = cursor.execute("SELECT checking from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking = round(int(checking[0]))
        if checking == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return 
        checking1 = cursor.execute("SELECT checking1 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking1 = round(int(checking1[0]))
        if checking1 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return
        checking2 = cursor.execute("SELECT checking2 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking2 = round(int(checking2[0]))
        if checking2 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return
        checking3 = cursor.execute("SELECT checking3 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking3 = round(int(checking3[0]))
        if checking3 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return 
        if stavkatime > period:
            if balance >= summ:
                if summ > 0:
                    dice_mes = await message.answer_dice(emoji='‚öΩÔ∏è')
                    value = dice_mes.dice.value 
                    if value in [1, 2]:
                        await bot.send_message(message.chat.id, f"üôÅ | {name}, –≤—ã –ø—Ä–æ–º–∞—Ö–Ω—É–ª–∏—Å—å –∏ –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {summ}$", parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance - summ)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        return 
                    elif value in [3, 4, 5]:
                        await bot.send_message(message.chat.id, f"‚≠êÔ∏è | {name}, –∑–∞–±–∏–≤–∞–µ—Ç –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≥–æ–ª +{summ}$", parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance - summ)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        return 
                elif summ <= 0:
                    await bot.send_message(chat_id, f'0‚É£‚ùå | {name} –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ ', parse_mode='html') 
            elif int(balance) <= int(summ):
                await bot.send_message(chat_id, f'üòû | –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', parse_mode='html')
        else:
            await bot.send_message(chat_id, f'‚è± | {name}, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥!', parse_mode='html')
            return
            

    if message.text.startswith("–ì–æ–ª"):
        msg = message 
        user_id = msg.from_user.id
        chat_id = message.chat.id
        name = message.from_user.get_mention(as_html=True)
        summ = int(msg.text.split()[1])
        games = cursor.execute("SELECT games from user where id = ?", (message.from_user.id,)).fetchone()
        games = int(games[0])
        balance = cursor.execute("SELECT balance from user where id = ?", (message.from_user.id,)).fetchone()
        balance = int(balance[0])
        period = 5
        get = cursor.execute("SELECT last_stavka FROM bots WHERE chat_id = ?", (message.chat.id,)).fetchone()
        last_stavka = f"{int(get[0])}"
        stavkatime = time.time() - float(last_stavka)
        checking = cursor.execute("SELECT checking from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking = round(int(checking[0]))
        if checking == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return 
        checking1 = cursor.execute("SELECT checking1 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking1 = round(int(checking1[0]))
        if checking1 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return
        checking2 = cursor.execute("SELECT checking2 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking2 = round(int(checking2[0]))
        if checking2 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return
        checking3 = cursor.execute("SELECT checking3 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking3 = round(int(checking3[0]))
        if checking3 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return 
        if stavkatime > period:
            if balance >= summ:
                if summ > 0:
                    dice_mes = await message.answer_dice(emoji='‚öΩÔ∏è')
                    value = dice_mes.dice.value 
                    if value in [1, 2]:
                        await bot.send_message(message.chat.id, f"üôÅ | {name}, –≤—ã –ø—Ä–æ–º–∞—Ö–Ω—É–ª–∏—Å—å –∏ –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {summ}$", parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance - summ)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        return 
                    elif value in [3, 4, 5]:
                        await bot.send_message(message.chat.id, f"‚≠êÔ∏è | {name}, –∑–∞–±–∏–≤–∞–µ—Ç –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≥–æ–ª +{summ}$", parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance - summ)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        return 
                elif summ <= 0:
                    await bot.send_message(chat_id, f'0‚É£‚ùå | {name} –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ ', parse_mode='html') 
            elif int(balance) <= int(summ):
                await bot.send_message(chat_id, f'üòû | –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', parse_mode='html')
        else:
            await bot.send_message(chat_id, f'‚è± | {name}, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥!', parse_mode='html')
            return

    if message.text.startswith("–∫—É–±"):
        msg = message 
        user_id = msg.from_user.id
        chat_id = message.chat.id
        name = message.from_user.get_mention(as_html=True)
        isxod = int(msg.text.split()[1])
        summ = int(msg.text.split()[2])
        games = cursor.execute("SELECT games from user where id = ?", (message.from_user.id,)).fetchone()
        games = int(games[0])
        balance = cursor.execute("SELECT balance from user where id = ?", (message.from_user.id,)).fetchone()
        balance = int(balance[0])
        period = 5
        get = cursor.execute("SELECT last_stavka FROM bots WHERE chat_id = ?", (message.chat.id,)).fetchone()
        last_stavka = f"{int(get[0])}"
        stavkatime = time.time() - float(last_stavka)
        checking = cursor.execute("SELECT checking from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking = round(int(checking[0]))
        if checking == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return 
        checking1 = cursor.execute("SELECT checking1 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking1 = round(int(checking1[0]))
        if checking1 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return
        checking2 = cursor.execute("SELECT checking2 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking2 = round(int(checking2[0]))
        if checking2 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return
        checking3 = cursor.execute("SELECT checking3 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking3 = round(int(checking3[0]))
        if checking3 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return 
        if isxod <= 6 and isxod >= 1:
            if stavkatime > period:
                if balance >= summ:
                    if summ > 0:
                        dice_mes = await bot.send_dice(message.chat.id)
                        value = dice_mes.dice.value 
                        if value == isxod:
                            await bot.send_message(message.chat.id, f"üéä | {name}, –Ω–∞–º –ø–æ–≤–µ–∑–ª–æ –∏ –∫—É–±–∏–∫ –≤—ã–ø–∞–ª –Ω–∞ —Ç–æ —á–∏—Å–ª–æ —á—Ç–æ —Ç—ã –∑–∞–≥–∞–¥–∞–ª(-–∞)\n –í–∞—à –ø—Ä–∏–∑: {summ*3}$", parse_mode='html')
                            cursor.execute(f'UPDATE user SET balance = {(balance + summ + summ + summ)} where id = "{user_id}"')
                            cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                            cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                            connect.commit()
                            return 
                        else:
                            await bot.send_message(message.chat.id, f"üôÅ | {name}, —É–¥–∞—á–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–µ —Å –≤–∞–º–∏, –≤—ã –ø—Ä–æ–∏–æ—Ä–∞–ª–∏ {summ}$", parse_mode='html')
                            cursor.execute(f'UPDATE user SET balance = {(balance - summ)} where id = "{user_id}"')
                            cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                            cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                            connect.commit() 
                            return 
                    elif summ <= 0:
                        await bot.send_message(chat_id, f'0‚É£‚ùå | {name} –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ ', parse_mode='html') 
                elif int(balance) <= int(summ):
                    await bot.send_message(chat_id, f'üòû | –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', parse_mode='html')
            else:
                await bot.send_message(chat_id, f'‚è± | {name}, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥!', parse_mode='html')
                return
        else:
            await message.reply(f"–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 6.")

    if message.text.startswith("–ö—É–±"):
        msg = message 
        user_id = msg.from_user.id
        chat_id = message.chat.id
        name = message.from_user.get_mention(as_html=True)
        isxod = int(msg.text.split()[1])
        summ = int(msg.text.split()[2])
        games = cursor.execute("SELECT games from user where id = ?", (message.from_user.id,)).fetchone()
        games = int(games[0])
        balance = cursor.execute("SELECT balance from user where id = ?", (message.from_user.id,)).fetchone()
        balance = int(balance[0])
        period = 5
        get = cursor.execute("SELECT last_stavka FROM bots WHERE chat_id = ?", (message.chat.id,)).fetchone()
        last_stavka = f"{int(get[0])}"
        stavkatime = time.time() - float(last_stavka)
        checking = cursor.execute("SELECT checking from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking = round(int(checking[0]))
        if checking == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return 
        checking1 = cursor.execute("SELECT checking1 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking1 = round(int(checking1[0]))
        if checking1 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return
        checking2 = cursor.execute("SELECT checking2 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking2 = round(int(checking2[0]))
        if checking2 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return
        checking3 = cursor.execute("SELECT checking3 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking3 = round(int(checking3[0]))
        if checking3 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return 
        if isxod <= 6 and isxod >= 1:
            if stavkatime > period:
                if balance >= summ:
                    if summ > 0:
                        dice_mes = await bot.send_dice(message.chat.id)
                        value = dice_mes.dice.value 
                        if value == isxod:
                            await bot.send_message(message.chat.id, f"üéä | {name}, –Ω–∞–º –ø–æ–≤–µ–∑–ª–æ –∏ –∫—É–±–∏–∫ –≤—ã–ø–∞–ª –Ω–∞ —Ç–æ —á–∏—Å–ª–æ —á—Ç–æ —Ç—ã –∑–∞–≥–∞–¥–∞–ª(-–∞)\n –í–∞—à –ø—Ä–∏–∑: {summ*3}$", parse_mode='html')
                            cursor.execute(f'UPDATE user SET balance = {(balance + summ + summ + summ)} where id = "{user_id}"')
                            cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                            cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                            connect.commit()
                            return 
                        else:
                            await bot.send_message(message.chat.id, f"üôÅ | {name}, —É–¥–∞—á–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–µ —Å –≤–∞–º–∏, –≤—ã –ø—Ä–æ–∏–æ—Ä–∞–ª–∏ {summ}$", parse_mode='html')
                            cursor.execute(f'UPDATE user SET balance = {(balance - summ)} where id = "{user_id}"')
                            cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                            cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                            connect.commit() 
                            return 
                    elif summ <= 0:
                        await bot.send_message(chat_id, f'0‚É£‚ùå | {name} –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ ', parse_mode='html') 
                elif int(balance) <= int(summ):
                    await bot.send_message(chat_id, f'üòû | –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', parse_mode='html')
            else:
                await bot.send_message(chat_id, f'‚è± | {name}, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥!', parse_mode='html')
                return
        else:
            await message.reply(f"–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 6.")

    if message.text.startswith("–±–∞—Å"):
        msg = message 
        user_id = msg.from_user.id
        chat_id = message.chat.id
        name = message.from_user.get_mention(as_html=True)
        summ = int(msg.text.split()[1])
        games = cursor.execute("SELECT games from user where id = ?", (message.from_user.id,)).fetchone()
        games = int(games[0])
        balance = cursor.execute("SELECT balance from user where id = ?", (message.from_user.id,)).fetchone()
        balance = int(balance[0])
        period = 5
        get = cursor.execute("SELECT last_stavka FROM bots WHERE chat_id = ?", (message.chat.id,)).fetchone()
        last_stavka = f"{int(get[0])}"
        stavkatime = time.time() - float(last_stavka)
        checking = cursor.execute("SELECT checking from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking = round(int(checking[0]))
        if checking == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return 
        checking1 = cursor.execute("SELECT checking1 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking1 = round(int(checking1[0]))
        if checking1 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return
        checking2 = cursor.execute("SELECT checking2 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking2 = round(int(checking2[0]))
        if checking2 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return
        checking3 = cursor.execute("SELECT checking3 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking3 = round(int(checking3[0]))
        if checking3 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return 
        if stavkatime > period:
            if balance >= summ:
                if summ > 0:
                    dice_mes = await message.answer_dice(emoji='üèÄ')
                    value = dice_mes.dice.value 
                    if value in [4, 5]:
                        await bot.send_message(message.chat.id, f"‚òÑ | {name}, –æ—Ç–ª–∏—á–Ω–æ–µ –ø–æ–ø–∞–¥–∞–Ω–∏–µ +{summ}$", parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance + summ)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        return 
                    elif value in [1, 2, 3]:
                        await bot.send_message(message.chat.id, f"üôÅ | {name}, –≤—ã –ø—Ä–æ–º–∞—Ö–Ω—É–ª–∏—Å—å –∏ –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {summ}$", parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance - summ)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        return 
                elif summ <= 0:
                    await bot.send_message(chat_id, f'0‚É£‚ùå | {name} –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ ', parse_mode='html') 
            elif int(balance) <= int(summ):
                await bot.send_message(chat_id, f'üòû | –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', parse_mode='html')
        else:
            await bot.send_message(chat_id, f'‚è± | {name}, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥!', parse_mode='html')
            return

    if message.text.startswith("–±–∞—Å"):
        msg = message 
        user_id = msg.from_user.id
        chat_id = message.chat.id
        name = message.from_user.get_mention(as_html=True)
        summ = int(msg.text.split()[1])
        games = cursor.execute("SELECT games from user where id = ?", (message.from_user.id,)).fetchone()
        games = int(games[0])
        balance = cursor.execute("SELECT balance from user where id = ?", (message.from_user.id,)).fetchone()
        balance = int(balance[0])
        period = 5
        get = cursor.execute("SELECT last_stavka FROM bots WHERE chat_id = ?", (message.chat.id,)).fetchone()
        last_stavka = f"{int(get[0])}"
        stavkatime = time.time() - float(last_stavka)
        checking = cursor.execute("SELECT checking from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking = round(int(checking[0]))
        if checking == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return 
        checking1 = cursor.execute("SELECT checking1 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking1 = round(int(checking1[0]))
        if checking1 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return
        checking2 = cursor.execute("SELECT checking2 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking2 = round(int(checking2[0]))
        if checking2 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return
        checking3 = cursor.execute("SELECT checking3 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking3 = round(int(checking3[0]))
        if checking3 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return 
        if stavkatime > period:
            if balance >= summ:
                if summ > 0:
                    dice_mes = await message.answer_dice(emoji='üèÄ')
                    value = dice_mes.dice.value 
                    if value in [4, 5]:
                        await bot.send_message(message.chat.id, f"‚òÑ | {name}, –æ—Ç–ª–∏—á–Ω–æ–µ –ø–æ–ø–∞–¥–∞–Ω–∏–µ +{summ}$", parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance + summ)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        return 
                    elif value in [1, 2, 3]:
                        await bot.send_message(message.chat.id, f"üôÅ | {name}, –≤—ã –ø—Ä–æ–º–∞—Ö–Ω—É–ª–∏—Å—å –∏ –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {summ}$", parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance - summ)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        return 
                elif summ <= 0:
                    await bot.send_message(chat_id, f'0‚É£‚ùå | {name} –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ ', parse_mode='html') 
            elif int(balance) <= int(summ):
                await bot.send_message(chat_id, f'üòû | –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', parse_mode='html')
        else:
            await bot.send_message(chat_id, f'‚è± | {name}, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥!', parse_mode='html')
            return

    if message.text.startswith("–±–æ—É–ª"):
        msg = message 
        user_id = msg.from_user.id
        chat_id = message.chat.id
        name = message.from_user.get_mention(as_html=True)
        summ = int(msg.text.split()[1])
        games = cursor.execute("SELECT games from user where id = ?", (message.from_user.id,)).fetchone()
        games = int(games[0])
        balance = cursor.execute("SELECT balance from user where id = ?", (message.from_user.id,)).fetchone()
        balance = int(balance[0])
        period = 5
        get = cursor.execute("SELECT last_stavka FROM bots WHERE chat_id = ?", (message.chat.id,)).fetchone()
        last_stavka = f"{int(get[0])}"
        stavkatime = time.time() - float(last_stavka)
        checking = cursor.execute("SELECT checking from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking = round(int(checking[0]))
        if checking == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return 
        checking1 = cursor.execute("SELECT checking1 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking1 = round(int(checking1[0]))
        if checking1 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return
        checking2 = cursor.execute("SELECT checking2 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking2 = round(int(checking2[0]))
        if checking2 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return
        checking3 = cursor.execute("SELECT checking3 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking3 = round(int(checking3[0]))
        if checking3 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return 
        if stavkatime > period:
            if balance >= summ:
                if summ > 0:
                    dice_mes = await message.answer_dice(emoji='üé≥')
                    value = dice_mes.dice.value 
                    if value in [4, 5, 6]:
                        await bot.send_message(message.chat.id, f"üéÜ | {name}, –æ—Ç–ª–∏—á–Ω—ã–π –±—Ä–æ—Å–æ–∫ +{summ}$", parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance + summ)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        return 
                    elif value in [1, 2, 3]:
                        await bot.send_message(message.chat.id, f"üôÅ | {name}, –Ω–µ –æ—á–µ–Ω—å —É–¥–∞—á–Ω—ã–π –±—Ä–æ—Å–æ–∫, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {summ}$", parse_mode='html')
                        cursor.execute(f'UPDATE user SET balance = {(balance - summ)} where id = "{user_id}"')
                        cursor.execute(f'UPDATE user SET games = {games + 1} where id = "{user_id}"')
                        cursor.execute(f'UPDATE bots SET last_stavka=? WHERE chat_id=?', (time.time(), chat_id,))
                        connect.commit() 
                        return 
                elif summ <= 0:
                    await bot.send_message(chat_id, f'0‚É£‚ùå | {name} –Ω–µ–ª—å–∑—è —Å—Ç–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ ', parse_mode='html') 
            elif int(balance) <= int(summ):
                await bot.send_message(chat_id, f'üòû | –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', parse_mode='html')
        else:
            await bot.send_message(chat_id, f'‚è± | {name}, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥!', parse_mode='html')
            return

# –ø–µ—Ä–µ–¥–∞—á–∞ –º–æ–Ω–µ—Ç
    if message.text.startswith("–¥–∞—Ç—å"):
        msg = message
        user_id = msg.from_user.id
        name = msg.from_user.last_name 
        rname =  msg.reply_to_message.from_user.last_name 
        user_name = message.from_user.get_mention(as_html=True)
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
        reply_user_id = msg.reply_to_message.from_user.id
       
        perevod = int(msg.text.split()[1])
        perevod2 = '{:,}'.format(perevod)

        cursor.execute(f"SELECT id FROM user WHERE id = '{user_id}'")
        balance = cursor.execute("SELECT balance from user WHERE id = ?", (message.from_user.id,)).fetchone()
        balance = round(int(balance[0]))
        balance2 = cursor.execute("SELECT balance from user WHERE id = ?", (message.reply_to_message.from_user.id,)).fetchone()
        balance2 = round(balance2[0])
        checking = cursor.execute("SELECT checking from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking = round(int(checking[0]))

        if not reply_user_id:
            await message.reply("‚ùó | –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–µ—Ä–µ–¥–∞—á—É, –Ω–æ —Å —Ä–µ–ø–ª–∞–µ–º –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å.")
            return
       
        if reply_user_id == user_id:
            await message.reply(f'ü©≥ | –ü–µ—Ä–µ–ª–æ–∂–∏–ª–∏ –¥–µ–Ω—å–≥–∏ —Å –æ–¥–Ω–æ–≥–æ –∫–∞—Ä–º–∞–Ω–∞ –≤ –¥—Ä—É–≥–æ–π', parse_mode='html')
            return

        if reply_user_id == (await bot.get_me()).id:
            await message.reply(f"–ù–µ–ª—å–∑—è –ø–µ—Ä–µ–¥–∞—Ç—å —á—Ç–æ –ª–∏–±–æ –±–æ—Ç—É.")
            return

        if checking == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return 
        checking1 = cursor.execute("SELECT checking1 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking1 = round(int(checking1[0]))
        if checking1 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return
        checking2 = cursor.execute("SELECT checking2 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking2 = round(int(checking2[0]))
        if checking2 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return
        checking3 = cursor.execute("SELECT checking3 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking3 = round(int(checking3[0]))
        if checking3 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return

        if perevod > 0:
            if balance >= perevod:
                await message.reply(f'üîÉ | –ü–µ—Ä–µ–¥–∞–ª(-–∞) {perevod2}$, {reply_user_name}', parse_mode='html')
                cursor.execute(f'UPDATE user SET balance = {balance - perevod} WHERE id = "{user_id}"') 
                cursor.execute(f'UPDATE user SET balance = {balance2 + perevod} WHERE id = "{reply_user_id}"')
                connect.commit()    
   
            elif int(balance) <= int(perevod):
                await message.reply( f'üîÉ‚ùå | {user_name} –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏.', parse_mode='html')

        if perevod <= 0:
            await message.reply( f'0‚É£‚ùå | –ù–µ–ª—å–∑—è –ø–µ—Ä–µ–¥–∞—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ', parse_mode='html')  

    if message.text.startswith("–î–∞—Ç—å"):
        msg = message
        user_id = msg.from_user.id
        name = msg.from_user.last_name 
        rname =  msg.reply_to_message.from_user.last_name 
        user_name = message.from_user.get_mention(as_html=True)
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
        reply_user_id = msg.reply_to_message.from_user.id
       
        perevod = int(msg.text.split()[1])
        perevod2 = '{:,}'.format(perevod)

        cursor.execute(f"SELECT id FROM user WHERE id = '{user_id}'")
        balance = cursor.execute("SELECT balance from user WHERE id = ?", (message.from_user.id,)).fetchone()
        balance = round(int(balance[0]))
        balance2 = cursor.execute("SELECT balance from user WHERE id = ?", (message.reply_to_message.from_user.id,)).fetchone()
        balance2 = round(balance2[0])
        checking = cursor.execute("SELECT checking from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking = round(int(checking[0]))

        if not reply_user_id:
            await message.reply("‚ùó | –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–µ—Ä–µ–¥–∞—á—É, –Ω–æ —Å —Ä–µ–ø–ª–∞–µ–º –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å.")
            return
       
        if reply_user_id == user_id:
            await message.reply(f'ü©≥ | –ü–µ—Ä–µ–ª–æ–∂–∏–ª–∏ –¥–µ–Ω—å–≥–∏ —Å –æ–¥–Ω–æ–≥–æ –∫–∞—Ä–º–∞–Ω–∞ –≤ –¥—Ä—É–≥–æ–π', parse_mode='html')
            return

        if reply_user_id == (await bot.get_me()).id:
            await message.reply(f"–ù–µ–ª—å–∑—è –ø–µ—Ä–µ–¥–∞—Ç—å —á—Ç–æ –ª–∏–±–æ –±–æ—Ç—É.")
            return

        if checking == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return 
        checking1 = cursor.execute("SELECT checking1 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking1 = round(int(checking1[0]))
        if checking1 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return
        checking2 = cursor.execute("SELECT checking2 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking2 = round(int(checking2[0]))
        if checking2 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return
        checking3 = cursor.execute("SELECT checking3 from user WHERE id = ?", (message.from_user.id,)).fetchone()
        checking3 = round(int(checking3[0]))
        if checking3 == 1:
            await bot.send_message(chat_id, f'‚è± | –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã', parse_mode='html')
            return

        if perevod > 0:
            if balance >= perevod:
                await message.reply(f'üîÉ | –ü–µ—Ä–µ–¥–∞–ª(-–∞) {perevod2}$, {reply_user_name}', parse_mode='html')
                cursor.execute(f'UPDATE user SET balance = {balance - perevod} WHERE id = "{user_id}"') 
                cursor.execute(f'UPDATE user SET balance = {balance2 + perevod} WHERE id = "{reply_user_id}"')
                connect.commit()    
   
            elif int(balance) <= int(perevod):
                await message.reply( f'üîÉ‚ùå | {user_name} –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏.', parse_mode='html')

        if perevod <= 0:
            await message.reply( f'0‚É£‚ùå | –ù–µ–ª—å–∑—è –ø–µ—Ä–µ–¥–∞—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ', parse_mode='html') 

# —Ä–ø –∫–æ–º–∞–Ω–¥—ã
    if message.text.lower() == "—á–º–æ–∫": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üíã | {user_name} —á–º–æ–∫–Ω—É–ª(-–∞) {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "–∫—É—Å—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üòº | {user_name} –∫—É—Å—å–Ω—É–ª(-–∞) {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "–æ–±–Ω—è—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"ü§ó | {user_name} –æ–±–Ω—è–ª(-–∞) {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üíã | {user_name} –ø–æ—Ü–µ–ª–æ–≤–∞–ª(-–∞) {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "–¥–∞—Ç—å –ø—è—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"‚úã | {user_name} –¥–∞–ª(-–∞) –ø—è—Ç—å {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "–ø–æ–¥–∞—Ä–∏—Ç—å –∞–π—Ñ–æ–Ω": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üì± | {user_name} –ø–æ–¥–∞—Ä–∏–ª(-–∞) –∞–π—Ñ–æ–Ω {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "—É–¥–∞—Ä–∏—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"ü§õ | {user_name} —É–¥–∞—Ä–∏–ª(-–∞) {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "–∑–∞—Å–∫–∞–º–∏—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True)
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üë®‚Äçüíª | {user_name} –∑–∞—Å–∫–∞–º–∏–ª(-–∞) {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "–ø—Ä–∏–∂–∞—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"ü§≤ | {user_name} –ø—Ä–∏–∂–∞–ª(-–∞) {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "—É–∫—É—Å–∏—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üò¨ | {user_name} —É–∫—É—Å–∏–ª(-–∞) {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "–≤–∑—è—Ç—å –∑–∞ —Ä—É–∫—É": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"ü§ù | {user_name} –≤–∑—è–ª(-–∞) –∑–∞ —Ä—É–∫—É {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "–ø—Ä–∏–∂–∞—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"ü§≤ | {user_name} –ø—Ä–∏–∂–∞–ª(-–∞) {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "–ø–æ—Ö–ª–æ–ø–∞—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üëè | {user_name} –ø–æ—Ö–ª–æ–ø–∞–ª(-–∞) {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "–∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞—Ç—å":
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üëâüëå | {user_name} –∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞–ª(-–∞) {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ —á–∞–π": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"‚òïÔ∏è | {user_name} –ø—Ä–∏–≥–ª–∞—Å–∏–ª(-–∞) –Ω–∞ —á–∞–π {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "—É–±–∏—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üî™ | {user_name} —É–±–∏–ª(-–∞) {reply_user_name}", parse_mode='html') 
            
    if message.text.lower() == "—É–µ–±–∞—Ç—å":
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply:
             replyuser = reply.from_user 
             await bot.send_message(message.chat.id, f"ü§ú | {user_name} —É–µ–±–∞–ª(-–∞) {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "—É–∫—Ä–∞—Å—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üí∞ | {user_name} —É–∫—Ä–∞–ª(-–∞) —É {reply_user_name} –¥–µ–Ω—å–≥–∏", parse_mode='html') 
    if message.text.lower() == "–æ—Ç—Å–æ—Å–∞—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üçå | {user_name} –æ—Ç—Å–æ—Å–∞–ª(-–∞) {reply_user_name}", parse_mode='html') 
 
    if message.text.lower() == "–æ—Ç–ª–∏–∑–∞—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üëÖ | {user_name} –æ—Ç–ª–∏–∑–∞–ª(-–∞) {reply_user_name}", parse_mode='html') 
 
    if message.text.lower() == "–≤—ã–µ–±–∞—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üîû | {user_name} –≤—ã–µ–±–∞–ª(-–∞) {reply_user_name}", parse_mode='html') 
 
    if message.text.lower() == "—Å–∂–µ—á—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üî• | {user_name} —Å–∂—ë–≥ {reply_user_name}", parse_mode='html') 
 
    if message.text.lower() == "—Ç—Ä–∞—Ö–Ω—É—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üîû | {user_name} —Ç—Ä–∞—Ö–Ω—É–ª(-–∞) {reply_user_name}", parse_mode='html')

    if message.text.lower() == "–ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"ü•≥ | {user_name} –ø–æ–∑–¥—Ä–∞–≤–∏–ª(-–∞) {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "—Å—É–∏—Ü–∏–¥–Ω—É—Ç—å—Å—è":
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"‚ö∞ | {user_name} –ø—Ä–µ–¥–ª–æ–∂–∏–ª(-–∞) {reply_user_name} —Å—É–∏—Ü–∏–¥–Ω—É—Ç—å—Å—è", parse_mode='html') 
    if message.text.lower() == "–ø–æ–∫—É—à–∞—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üçü | {user_name} –ø–æ–∑–≤–∞–ª(-–∞) {reply_user_name} –ø–æ–∫—É—à–∞—Ç—å", parse_mode='html') 
    if message.text.lower() == "–≤—ã–ª–µ—á–∏—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üòÑ | {user_name} –≤—ã–ª–µ—á–∏–ª(-–∞) {reply_user_name} –æ—Ç —Ç–æ—Å–∫–∏", parse_mode='html')
    if message.text.lower() == "–∑–∞–≤—è–∑–∞—Ç—å –≥–ª–∞–∑–∞": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üß£ | {user_name} –∑–∞–≤—è–∑–∞–ª(-–∞) –≥–ª–∞–∑–∞ {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "–ø–æ–º—É—Ä—á–∞—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üêà‚Äç‚¨õ | {user_name} –ø–æ–º—É—Ä—á–∞–ª(-–∞) –Ω–∞ —É—à–∫–æ {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "–æ–≥–ª—É—à–∏—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üòµ‚Äçüí´ | {user_name} –æ–≥–ª—É—à–∏–ª(-–∞) –∞—Ä–º–∞—Ç—É—Ä–æ–π {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "–ø–æ–∫–∞–∑–∞—Ç—å –Ω–æ–∂–∫–∏": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üôÑ | {user_name} –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –ø–æ–∫–∑–∞–ª(-–∞)  {reply_user_name} –Ω–æ–∂–∫–∏", parse_mode='html')
    if message.text.lower() == "–∑–∞—Å—Ç–∞–≤–∏—Ç—å —Å–∫–∏–Ω—É—Ç—å —Ä—É—á–∫–∏": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üôä | {user_name} –∑–∞—Å—Ç–∞–≤–∏–ª(-–∞) —Å–∫–∏–Ω—É—Ç—å —Å–≤–æ–∏ —Ä—É—á–∫–∏ {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "–∑–∞—Å—Ç–∞–≤–∏—Ç—å —Å–∫–∏–Ω—É—Ç—å –Ω–æ–∂–∫–∏": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üôä | {user_name} –∑–∞—Å—Ç–≤–∏–ª(-–∞) {reply_user_name} —Å–∫–∏–Ω—É—Ç—å –Ω–æ–∂–∫–∏ –≤ –ª—Å", parse_mode='html') 
    if message.text.lower() == "—Å–æ–±—Ä–∞—Ç—å –∞–ª–∏–º–µ–Ω—Ç—ã": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üí∞ | {user_name} —Å–æ–±—Ä–∞–ª(-–∞) —Å  {reply_user_name} –∞–ª–∏–º–µ–Ω—Ç—ã", parse_mode='html') 
    if message.text.lower() == "–ø—Ä–∏–∫—É—Å–∏—Ç—å –≥—É–±—É": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"ü§≠ | {user_name} –ø—Ä–∏–∫—É—Å–∏–ª(-–∞) –≥—É–±—É {reply_user_name} –≤–æ –≤—Ä–µ–º—è —Å—Ç—Ä–∞—Å—Ç–Ω–æ–≥–æ –ø–æ—Ü–µ–ª—É—è", parse_mode='html')

    if message.text.lower() == "—É–∫—Ä–∞—Å—Ç—å —à–∞–ø–∫—É": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f" üß¢ | {user_name} —É–∫—Ä–∞–ª(-–∞) —à–∞–ø–∫—É —É {reply_user_name}", parse_mode='html') 
    if message.text.lower() == "—Ä–∞–∑–¥–µ—Ç—å": 
        user_name = message.from_user.get_mention(as_html=True) 
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True) 
        reply = message.reply_to_message 
        if reply: 
            replyuser = reply.from_user 
            await bot.send_message(message.chat.id, f"üôà | {user_name} –∞–∫–∫—É—Ä–∞—Ç–Ω–æ —Ä–∞–∑–¥–µ–ª(-–∞) {reply_user_name}", parse_mode='html')

# –æ—Ç–∫—Ä—ã—Ç–∫–∏ 
    if message.text.startswith("—Ñ–æ—Ç–æ –æ—Ç–∫—Ä—ã—Ç–∫–∏"):
        msg = message
        user_id = msg.from_user.id
        name = message.from_user.get_mention(as_html=True) 
        number = int(msg.text.split()[2])
        num = number + 2
        if number <= 22 and number >= 1:
            cursor.execute(f"UPDATE user SET photo_otkr = '{number}' WHERE id = '{user_id}'")
            await message.reply(f"üåÖ | {name}, –≤—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ <a href='https://t.me/NORM_album/{num}/'>{number}</a>-—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –Ω–∞ —Ñ–æ–Ω —Å–≤–æ–µ–π –æ—Ç–∫—Ä—ã—Ç–∫–∏.", parse_mode='html')
        else:
            await message.reply(f"{name}, –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –ª–∏—à—å 22 –æ—Ç–∫—Ä—ã—Ç–∫–∏.", parse_mode='html')

    if message.text.startswith("–§–æ—Ç–æ –æ—Ç–∫—Ä—ã—Ç–∫–∏"):
        msg = message
        user_id = msg.from_user.id
        name = message.from_user.get_mention(as_html=True) 
        number = int(msg.text.split()[2])
        num = number + 2
        if number <= 22 and number >= 1:
            cursor.execute(f"UPDATE user SET photo_otkr = '{number}' WHERE id = '{user_id}'")
            await message.reply(f"üåÖ | {name}, –≤—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ <a href='https://t.me/NORM_album/{num}/'>{number}</a>-—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –Ω–∞ —Ñ–æ–Ω —Å–≤–æ–µ–π –æ—Ç–∫—Ä—ã—Ç–∫–∏.", parse_mode='html')
        else:
            await message.reply(f"{name}, –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –ª–∏—à—å 22 –æ—Ç–∫—Ä—ã—Ç–∫–∏.", parse_mode='html')

# –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∫–∏ 
    if message.text.startswith("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∫—Ä—ã—Ç–∫—É"):
        msg = message 
        user_id = msg.from_user.id 
        reply_id = msg.reply_to_message.from_user.id
        reply = message.reply_to_message 
        name = message.from_user.get_mention(as_html=True) 
        cursor.execute("SELECT * FROM users WHERE id=?", (reply_id,))
        data = cursor.fetchone()
        text = " ".join(msg.text.split()[2:])
        texts = f"üì• <b>–í–∞–º –ø—Ä–∏—à–ª–∞ –æ—Ç–∫—Ä—ã—Ç–∫–∞</b>:\n    üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {name}\n\n üìÉ –¢–µ–∫—Å—Ç –æ—Ç–∫—Ä—ã—Ç–∫–∏: <code>{text}</code>"
        ph = cursor.execute(f"SELECT photo_otkr FROM user WHERE id = '{user_id}'").fetchone()
        ph = int(ph[0])
        if ph == 1:
            photo = open('otkr/o1.jpg', 'rb')
        if ph == 2:
            photo = open('otkr/o2.jpg', 'rb')
        if ph == 3:
            photo = open('otkr/o3.jpg', 'rb')
        if ph == 4:
            photo = open('otkr/o4.jpg', 'rb')
        if ph == 5:
            photo = open('otkr/o5.jpg', 'rb')
        if ph == 6:
            photo = open('otkr/o6.jpg', 'rb')
        if ph == 7:
            photo = open('otkr/o7.jpg', 'rb')
        if ph == 8:
            photo = open('otkr/o8.jpg', 'rb')
        if ph == 9:
            photo = open('otkr/o9.jpg', 'rb')
        if ph == 10:
            photo = open('otkr/o10.jpg', 'rb')
        if ph == 11:
            photo = open('otkr/o11.jpg', 'rb')
        if ph == 12:
            photo = open('otkr/o12.jpg', 'rb')
        if ph == 13:
            photo = open('otkr/o13.jpg', 'rb')
        if ph == 14:
            photo = open('otkr/o14.jpg', 'rb')
        if ph == 15:
            photo = open('otkr/o15.jpg', 'rb')
        if ph == 16:
            photo = open('otkr/o16.jpg', 'rb')
        if ph == 17:
            photo = open('otkr/o17.jpg', 'rb')
        if ph == 18:
            photo = open('otkr/o18.jpg', 'rb')
        if ph == 19:
            photo = open('otkr/o19.jpg', 'rb')
        if ph == 20:
            photo = open('otkr/o20.jpg', 'rb')
        if ph == 21:
            photo = open('otkr/o21.jpg', 'rb')
        if ph == 22:
            photo = open('otkr/o22.jpg', 'rb')
            
        if reply:
            if data is None:
                await message.reply(f"üòñ | {name}, –ø–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–º–æ–∂–Ω–æ –æ–Ω –Ω–µ –ø–∏—Å–∞–ª –º–Ω–µ –≤ –õ–°.", parse_mode='html')
            else:
                await bot.send_photo(message.reply_to_message.from_user.id, photo, caption=texts, parse_mode='html')
                await message.reply(f"–û—Ç–∫—Ä—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ üòÉ")
        else:
            await message.reply(f"{name}, –∫–æ–º—É –æ—Ç–∫—Ä—ã—Ç–∫–∞ —Ç–æ?", parse_mode='html')
        

# –∞–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã 
    if message.text.lower() == ".–æ–±–Ω—É–ª–∏—Ç—å":
        msg = message
        user_id = msg.from_user.id
        name = msg.from_user.last_name 
        rname =  msg.reply_to_message.from_user.last_name 
        user_name = message.from_user.get_mention(as_html=True)
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
        reply_user_id = msg.reply_to_message.from_user.id
        st = cursor.execute(f"SELECT status FROM user WHERE id = '{user_id}'").fetchone()
        st = int(st[0])
        if st == 0:
            await message.reply(f"{user_name}, —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ ‚òπÔ∏è", parse_mode='html')
        elif st >= 2:
            await message.answer(f"üòî | {user_name} –æ–±–Ω—É–ª–∏–ª(-–∞) {reply_user_name}", parse_mode='html')
            cursor.execute(f'UPDATE user SET balance = {0} WHERE id = "{reply_user_id}"')
            connect.commit()    
            

    if message.text.startswith("–≤—ã–¥–∞—Ç—å"):
        msg = message
        user_id = msg.from_user.id
        name = msg.from_user.last_name 
        rname =  msg.reply_to_message.from_user.last_name 
        user_name = message.from_user.get_mention(as_html=True)
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
        reply_user_id = msg.reply_to_message.from_user.id
        sredsv = int(msg.text.split()[1])
        balance = cursor.execute(f"SELECT balance FROM user WHERE id = '{user_id}'")
        balance = int(balance[0])
        st = cursor.execute(f"SELECT status FROM user WHERE id = '{user_id}'").fetchone()
        st = int(st[0])
        if st == 0:
            await message.reply(f"{user_name}, —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ ‚òπÔ∏è", parse_mode='html')
        elif st >= 2:
            await message.answer(f"{user_name} –≤—ã–¥–∞–ª(-–∞) {sredstv}$ –∏–≥—Ä–æ–∫—É: {reply_user_name}", parse_mode='html')
            cursor.execute(f'UPDATE user SET balance = {balance + sredstv} WHERE id = "{reply_user_id}"')
            connect.commit()    

    if message.text.lower() == "–Ω–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–∞":
        msg = message
        user_id = msg.from_user.id
        name = msg.from_user.last_name 
        rname =  msg.reply_to_message.from_user.last_name 
        user_name = message.from_user.get_mention(as_html=True)
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
        reply_user_id = msg.reply_to_message.from_user.id
        st = cursor.execute(f"SELECT status FROM user WHERE id = '{user_id}'").fetchone()
        st = int(st[0])
        if st == 0 and st == 2:
            await message.reply(f"{user_name}, —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ ‚òπÔ∏è", parse_mode='html')
        elif st >= 3:
            await message.answer(f"‚òÄÔ∏è | {user_name} –Ω–∞–∑–Ω–∞—á–∏–ª(-–∞) {reply_user_name} –∞–¥–º–∏–Ω–æ–º", parse_mode='html')
            cursor.execute(f'UPDATE user SET status = {2} WHERE id = "{reply_user_id}"')
            connect.commit()    

    if message.text.lower() == "—Ä–∞–∑–∂–∞–ª–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω–∞":
        msg = message
        user_id = msg.from_user.id
        name = msg.from_user.last_name 
        rname =  msg.reply_to_message.from_user.last_name 
        user_name = message.from_user.get_mention(as_html=True)
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
        reply_user_id = msg.reply_to_message.from_user.id
        st = cursor.execute(f"SELECT status FROM user WHERE id = '{user_id}'").fetchone()
        st = int(st[0])
        if st == 0 and st == 2:
            await message.reply(f"{user_name}, —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ ‚òπÔ∏è", parse_mode='html')
        elif st >= 3:
            await message.answer(f"üò° | {user_name} —Ä–∞–∑–∂–∞–ª–æ–≤–∞–ª(-–∞) {reply_user_name} —Å –∑–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω–∞", parse_mode='html')
            cursor.execute(f'UPDATE user SET status = {0} WHERE id = "{reply_user_id}"')
            connect.commit()    

    if message.text.lower() == "–ø–æ–¥–∞—Ä–∏—Ç—å –≤–∏–ø":
        msg = message
        user_id = msg.from_user.id
        name = msg.from_user.last_name 
        rname =  msg.reply_to_message.from_user.last_name 
        user_name = message.from_user.get_mention(as_html=True)
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
        reply_user_id = msg.reply_to_message.from_user.id
        st = cursor.execute(f"SELECT status FROM user WHERE id = '{user_id}'").fetchone()
        st = int(st[0])
        if st == 0 and st == 1:
            await message.reply(f"{user_name}, —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ ‚òπÔ∏è", parse_mode='html')
        elif st >= 2:
            await message.answer(f"‚òÄÔ∏è | {user_name} –ø–æ–¥–∞—Ä–∏–ª(-–∞) {reply_user_name} –≤–∏–ø-—Å—Ç–∞—Ç—É—Å", parse_mode='html')
            cursor.execute(f'UPDATE user SET status = {1} WHERE id = "{reply_user_id}"')
            connect.commit()    

    if message.text.lower() == "–∑–∞–±—Ä–∞—Ç—å –≤–∏–ø":
        msg = message
        user_id = msg.from_user.id
        name = msg.from_user.last_name 
        rname =  msg.reply_to_message.from_user.last_name 
        user_name = message.from_user.get_mention(as_html=True)
        reply_user_name = message.reply_to_message.from_user.get_mention(as_html=True)
        reply_user_id = msg.reply_to_message.from_user.id
        st = cursor.execute(f"SELECT status FROM user WHERE id = '{user_id}'").fetchone()
        st = int(st[0])
        if st == 0 and st == 1:
            await message.reply(f"{user_name}, —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ ‚òπÔ∏è", parse_mode='html')
        elif st >= 2:
            await message.answer(f"üò° | {user_name} –∑–∞–±—Ä–∞–ª(-–∞) {reply_user_name} –≤–∏–ø-—Å—Ç–∞—Ç—É—Å", parse_mode='html')
            cursor.execute(f'UPDATE user SET status = {0} WHERE id = "{reply_user_id}"')
            connect.commit()    

@dp.callback_query_handler(text='zakaz1')
async def inlinebutton_zakaz(callback: types.CallbackQuery):
    await callback.message.answer(f'''–•–æ—á–µ—à—å —Ç–∞–∫–æ–≥–æ –∂–µ –±–æ—Ç–∞? üòè

–¢–æ–≥–¥–∞ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —Å—é–¥–∞ -> @php_aleks.

–ù–∞—á–∏–Ω–∞—é—â–∏–π –∫–æ–¥–µ—Ä
–î–∞–µ—Ç –≥–∞—Ä–∞–Ω—Ç–∏—é ‚úÖ
–†–∞–±–æ—Ç–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–µ–Ω–æ –∏ –¥–æ–≤–æ–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ ‚úÖ
–ù–µ –¥–æ—Ä–æ–≥–æ ‚úÖ

–ß–µ–≥–æ —Ç—ã –∂–¥—ë—à—å, —Å–ø–µ—à–∏ —Å–∫–æ—Ä–µ–µ –ø–∏—Å–∞—Ç—å –µ–º—É üòå ''')
    

@dp.callback_query_handler(text='helps')
async def inlinebutton_help(callback: types.CallbackQuery):
    help = InlineKeyboardMarkup(row_width=2)
    game = InlineKeyboardButton(text='–ò–≥—Ä–æ–≤—ã–µ üé∞', callback_data='game')
    statuss = InlineKeyboardButton(text='–°—Ç–∞—Ç—É—Å—ã üíé', callback_data='statuss')
    radio = InlineKeyboardButton(text='–†–∞–¥–∏–æ üìª', callback_data='radio')
    moder = InlineKeyboardButton(text='–ú–æ–¥–µ—Ä–∞—Ü–∏—è üëÆ', callback_data='moder')
    rp_command = InlineKeyboardButton(text='–†–ø - –∫–æ–º–∞–Ω–¥—ã üé≠', callback_data='rp_command')
    donat = InlineKeyboardButton(text='–î–æ–Ω–∞—Ç üí≥', callback_data='donat')
    help.add(game, statuss, radio, moder, rp_command, donat)
    await callback.message.answer(f'''üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –∫–∞–∫–∞—è –ø–æ–º–æ—â—å —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞?

1‚É£ | –ò–≥—Ä–æ–≤—ã–µ üé∞
2‚É£ | –°—Ç–∞—Ç—É—Å—ã üíé
3‚É£ | –†–∞–¥–∏–æ üìª
4‚É£ | –ú–æ–¥–µ—Ä–∞—Ü–∏—è üëÆ
5‚É£ | –†–ø - –∫–æ–º–∞–Ω–¥—ã üé≠
6‚É£ | –î–æ–Ω–∞—Ç üí≥''', reply_markup=help, parse_mode='html')

@dp.callback_query_handler(text='clikers')
async def inlinebutton_clikers1(callback: types.CallbackQuery):
    clickers = InlineKeyboardMarkup(row_width=3)
    obmen = InlineKeyboardButton(text='–æ–±–º–µ–Ω–∏–∫ üëæ -> üí∞', callback_data='obmen')
    click1 = InlineKeyboardButton(text='–ö–ª–∏–∫ üëáüèª', callback_data='click1')
    remove = InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å', callback_data='remove')
    clickers.add(obmen, click1, remove)
    await callback.message.answer(f"—Ç—ã –±—É–¥–µ—à—å –∫–ª–∏–∫–∞—Ç—å –∏–ª–∏ –∫–∞–∫?", reply_markup=clickers, parse_mode='html')
@dp.callback_query_handler(text='obmen')
async def inlinebutton_obmen(callback: types.CallbackQuery):
    clicks = cursor.execute("SELECT click FROM user").fetchall() 
    click = round(clicks)
    await callback.message.answer(f"–û–±–º–µ–Ω—è—Ç—å –∫–ª–∏–∫–∏ –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã: ¬´–æ–±–º–µ–Ω—è—Ç—å [—á–∏—Å–ª–æ]\n –ö—É—Ä—Å –Ω–∞ —Å–µ–≥–æ–¥–Ω—è 1 –∫–ª–∏–∫ - 2 –º–æ–Ω–µ—Ç–∫–∏.\n –£ –≤–∞—Å –∫–ª–∏–∫–æ–≤ -> <b>{click}</b>", parse_mode='html')

@dp.callback_query_handler(text='click1')
async def inlinebutton_click(query: types.CallbackQuery):
    clicks = cursor.execute("SELECT click FROM user").fetchall() 
    clicks = int(clicks)
    cursor.execute(f'UPDATE user SET click = {click + 1} where id = ?', (user_id,))
    connect.commit()
    await query.answer(f"{clicks+1} –∫–ª–∏–∫–æ–≤.", parse_mode='html')
@dp.callback_query_handler(text='remove')
async def inlinebutton_remove(callback: types.CallbackQuery):
    await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id) 
     
@dp.callback_query_handler(text='game')
async def inlinebutton_game(callback: types.CallbackQuery):
    name = message.from_user.get_mention(as_html=True)
    await callback.message.answer(f'''{name}, –∏–≥—Ä–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:

üìà | –¢—Ä–µ–π–¥ [—Å—É–º–º–∞] | ‚ö†
üò± | –†–∏—Å–∫! 
üé∞ | –ö–∞–∑–∏–Ω–æ [—Å—É–º–º–∞] 
ü§∫ | –¥—É—ç–ª—å [—Å—É–º–º–∞] + [—Ä–µ–ø–ª–∞–π] | ‚ö†
üè¶ | –±/–ë–∞–ª–∞–Ω/—Ö—Ä–∞–Ω–∏–ª–∏—â–µ 
üîÉ | –¥–∞—Ç—å [—Å—É–º–º–∞] 
üé≤ | –ö—É–± {1-6} [—Å—É–º–º–∞]
üé≥ | –±–æ—É–ª–∏–Ω–≥ [—Å—É–º–º–∞]
üèÄ | –±–∞—Å–∫–µ—Ç–±–æ–ª [—Å—É–º–º–∞]
‚öΩ | —Ñ—É—Ç–±–æ–ª [—Å—É–º–º–∞] 

–£–¥–∞—á–∏ –≤ —Ñ–∞—Ä–º–µ –º–æ–Ω–µ—Ç–æ–∫ üî•
<b>P.S</b>: –°–º–∞–π–ª–∏–∫–∏ —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.''', parse_mode='html')
     
@dp.callback_query_handler(text='statuss')
async def inlinebutton_status(callback: types.CallbackQuery):
    await callback.message.answer(f'''‚Ñπ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã –∏ –ø–æ–º–æ—â—å –¥–ª—è –Ω–∏—Ö:

üíé VIP - –≤–∏–ø —Å—Ç–∞—Ç—É—Å: 
   –ú–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∫–∞–∫ –∑–∞ –∏–≥—Ä–æ–≤—ã–µ –º–æ–Ω–µ—Ç–∫–∏ —Ç–∞–∫ –∏ –∑–∞ –Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–Ω–∞—Ç. | üíé –í–∏–ø —Å—Ç–∞—Ç—É—Å –¥–∞—ë—Ç –Ω–µ–º–Ω–æ–≥–æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–∞–¥ –æ–±—ã—á–Ω—ã–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏, –∞ –∏–º–µ–Ω–Ω–æ: 
 1. –£–∫–∞–∑–∞–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ —á—Ç–æ –≤—ã VIP üíé
 2. –ö–æ–º–∞–Ω–¥–æ–π ¬´!–∏–Ω—Ñ–∞¬ª - —Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.


‚úè –°–≤–æ–∏ —Å—Ç–∞—Ç—É—Å—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤—ã –º–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å –≤ –õ–° -> @Chelovechik_nep_loxoy''', parse_mode='html')

@dp.callback_query_handler(text='radio')
async def inlinebutton_radio(callback: types.CallbackQuery):
    await callback.message.answer(f''' –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.... ''', parse_mode='html')

@dp.callback_query_handler(text='moder')
async def inlinebutton_moder(callback: types.CallbackQuery):
    await callback.message.answer(f'''üëÆ –ö–æ–º–∞–Ω–¥—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏: 

üëû | –ö–∏–∫/–Ω–æ—Ä–º –∫–∏–∫ - –≤—ã–≥–Ω–∞—Ç—å —é–∑–µ—Ä–∞ –∏–∑ —á–∞—Ç–∞
‚ùå | –ë–∞–Ω/–Ω–æ—Ä–º –±–∞–Ω - –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —é–∑–µ—Ä–∞ –≤ —á–∞—Ç–µ 
üîá | –ú—É—Ç [–≤—Ä–µ–º—è + –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (—Å/s, –º/m, —á/h, –¥/d)] - –º—É—Ç–∏—Ç —é–∑–µ—Ä–∞ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è, –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º—É—Ç–∏—Ç —é–∑–µ—Ä–∞ –Ω–∞ 1 —á–∞—Å.
üÜò | !—Ä–µ–ø–æ—Ä—Ç - –∑–∞—Ä–µ–ø–æ—Ä—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.
üìå | .–ø–∏–Ω - –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª —Ä–µ–ø–ª–∞–π

ü§ê | –§–∏–ª—å—Ç—Ä—ã —Å–∫–≤–µ—Ä–Ω–æ—Å–ª–æ–≤–∏—è:
+–º–∞—Ç—ã - —Ä–∞–∑—Ä–µ—à–∏—Ç—å —Å–∫–≤–µ—Ä–Ω–æ—Å–ª–æ–≤–∏—Ç—å –≤ —á–∞—Ç–µ 
-–º–∞—Ç—ã - –∑–∞–ø—Ä–µ—Ç–∏—Ç—å —Å–∫–≤–µ—Ä–Ω–æ—Å–ª–æ–≤–∏—Ç—å –≤ —á–∞—Ç–µ | ‚ö† 

‚ö† <b>–û—Å—Ç–∞–ª—å–Ω–æ–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</b> ''', parse_mode='html')

@dp.callback_query_handler(text='rp_command')
async def inlinebutton_rp(callback: types.CallbackQuery):
    await callback.message.answer(f''' üëæ –°–ø–∏—Å–æ–∫ –†–ü - –∫–æ–º–∞–Ω–¥: 
    –ß–º–æ–∫ 
    –í—ã–µ–±–∞—Ç—å
    –î–∞—Ç—å –ø—è—Ç—å 
    –ò–∑–≤–∏–Ω–∏—Ç—å—Å—è 
    –ò–∑–Ω–∞—Å–∏–ª–æ–≤–∞—Ç—å
    –ö—É—Å—å
    –ö–∞—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å 
    –õ–∏–∑–Ω—É—Ç—å
    –û–±–Ω—è—Ç—å
    –ü–æ–∑–¥—Ä–∞–≤–∏—Ç—å 
    –ü–æ—Ü–µ–ª–æ–≤–∞—Ç—å
    –ü—Ä–∏–∂–∞—Ç—å
    –ü–æ—Ç—Ä–æ–≥–∞—Ç—å 
    –ü–æ–∂–∞—Ç—å —Ä—É–∫—É
    –ü—Ä–∏–∂–∞—Ç—å 
    –ü–æ—Ö–≤–∞–ª–∏—Ç—å
    –ü–æ–≥–ª–∞–¥–∏—Ç—å
    –ü–Ω—É—Ç—å
    –ü–æ—Å–ª–∞—Ç—å –Ω–∞—Ö—É–π
    –†–∞—Å—Å—Ç—Ä–µ–ª—è—Ç—å 
    –£—â–∏–ø–Ω—É—Ç—å 
    –£–µ–±–∞—Ç—å
    –£–¥–∞—Ä–∏—Ç—å
    –£–∫—É—Å–∏—Ç—å
    –£–±–∏—Ç—å
    –®–ª–µ–ø–Ω—É—Ç—å 
    –ü–æ–¥–∞—Ä–∏—Ç—å —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫ 
     ''', parse_mode='html')

@dp.callback_query_handler(text='donat')
async def inlinebutton_donat(callback: types.CallbackQuery):
    users = cursor.execute("SELECT id FROM users").fetchall() 
    allusers = len(users) 
    chats = cursor.execute("SELECT id FROM chat").fetchall() 
    allchats = len(chats) 
    await callback.message.answer(f'''ü§î <b>–ü–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –≤–ª–æ–∂–∏—Ç—å –¥–µ–Ω—å–≥–∏ –≤ —Ä–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–æ–µ–∫—Ç–∞?</b>

–û–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å –ø—Ä–∞–π—Å–æ–º –º–æ–∂–Ω–æ –Ω–∏–∂–µ:

‚úâ –†–∞—Å—Å—ã–ª–∫–∞ –≤ –±–æ—Ç–µ - 50‚ÇΩ || –†–∞—Å—Å—ã–ª–∫–∞ –≤ —á–∞—Ç–∞—Ö - ‚ùå

üë®‚Äçüíª –°–¥–µ–ª–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤–∞—à–µ–≥–æ —á–∞—Ç–∞ - –æ—Ç 10‚ÇΩ 
üí∞ –ü–æ–∫—É–ø–∫–∞ –º–æ–Ω–µ—Ç 1.000.000 - 1‚ÇΩ 
üíé VIP —Å—Ç–∞—Ç—É—Å - 8‚ÇΩ 
üê• –ê–¥–º–∏–Ω —Å—Ç–∞—Ç—É—Å - 15‚ÇΩ/–º–µ—Å—è—Ü - 105‚ÇΩ/–Ω–∞–≤—Å–µ–≥–¥–∞ 

–û–ø–ª–∞—Ç–∞: 
ü•ù –ö–∏–≤–∏: <code>NORM2CHELL</code>
üí≥ –ö–∞—Ä—Ç–∞: <code>5257 5201 2084 5496</code> 

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞: 
üë§ –Æ–∑–µ—Ä–æ–≤ –≤ –õ–°: <b>{allusers}</b>
üõñ –ß–∞—Ç–æ–≤: <b>{allchats}</b>

‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –º–æ–∂–Ω–æ —Ç—É—Ç -> @Chelovechik_nep_loxoy''', parse_mode='html')


    
@dp.callback_query_handler(text='pochta')
async def inlinebutton_pochta(callback: types.CallbackQuery):
    await callback.message.answer(f''' –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.... ''')

@dp.callback_query_handler(text='podp')
async def inlinebutton_ref(callback: types.CallbackQuery):
    await callback.message.answer(f"üíó –£ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–æ—Ç–∏–∫–∞ —Ç–∞–∫ –∂–µ –µ—Å—Ç—å —Å–≤–æ–∏ –∫–∞–Ω–∞–ª—ã –∏ —á–∞—Ç–∏–∫–∏:\n\n üôä –ß–∞—Ç–∏–∫: @NORMal_chat\nüòä –ö–∞–Ω–∞–ª —Å –æ—Ç–∫—Ä—ã—Ç–∫–∞–º–∏: @NORM_album\n\n–ú–æ–∂–µ—à—å –≤—Å—Ç—É–ø–∏—Ç—å –∏–ª–∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è üôÑ", parse_mode='html')

@dp.callback_query_handler(lambda c: c.data == "risk")
async def inlinebutton_risk(callback_query: types.CallbackQuery):
       if callback_query.from_user.id == message.from_user.id:
           balance = cursor.execute(f"SELECT balance FROM user WHERE id = ?",(callback_query.from_user.id,)).fetchone()
           stavka = round(int(balance[0]))
           isx = random.randint(1, 2)
           if isx == 1:
               win = stavka * 2
               cursor.execute(f'UPDATE user SET balance = {win} WHERE id = "{callback_query.from_user.id}"').fetchone()
               connect.commit()
               await callback_query.message.edit_text(f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –≤–∞—à –±–∞–ª–∞–Ω—Å —Ö2")
           elif isx == 2:
               lose = 0
               cursor.execute(f'UPDATE user SET balance = {0} WHERE id = "{callback_query.from_user.id}"').fetchone()
               connect.commit()
               await callback_query.message.edit_text("–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏, –≤–∞—à –±–∞–ª–∞–Ω—Å —Ç–µ–ø–µ—Ä—å 0")
       else:
           await bot.answer_callback_query(callback_query.from_user.id, text="–û–Ω–∞ —Ç–µ–±—è —Å—ä–µ—Å—Ç üêª", show_alert=True)
        

@dp.callback_query_handler(lambda c: c.data == "remove_risk")
async def inlinebutton_remove_risk(callback_query: types.CallbackQuery):
    await callback_query.message.delete()

@dp.callback_query_handler(lambda c: c.data == "telefon")
async def inlinebutton_tellefon(callback_query: types.CallbackQuery):
    t = datetime.now()
    ho = t.hour
    mi = t.minute
    bank = cursor.execute(f"SELECT bank FROM user WHERE id = ?",(callback_query.from_user.id,)).fetchone()
    bank = round(int(bank[0]))
    bank2 = '{:,}'.format(bank)
    krypto = cursor.execute(f"SELECT krypto FROM user WHERE id = ?",(callback_query.from_user.id,)).fetchone()
    krypto = round(int(krypto[0]))
    krypto2 = '{:,}'.format(krypto)
    if bank >= 999999999999999999999999:
        bank = 999999999999999999999999
        cursor.execute(f"UPDATE user SET bank = {999999999999999999999999} where id = ?",(callback_query.from_user.id,))
        connect.commit()
        bank2 = '{:,}'.format(bank)
    else:
        pass 
    if krypto >= 999999999999999999999999:
        krypto = 999999999999999999999999
        cursor.execute(f"UPDATE user SET krypto = {999999999999999999999999} where id = ?",(callback_query.from_user.id,))
        connect.commit()
        krypto2 = '{:,}'.format(krypto)
    else:
        pass 
    await callback_query.message.edit_text(f"\n   üì± Mobile phone     ‚è∞{ho}:{mi}\n | \n ‚îú –ò–º—è –≤–ª–∞–¥–µ–ª—å—Ü–∞: {callback_query.from_user.full_name} \n\ \n ‚îú –ù–æ–º–µ—Ä —Å—á—ë—Ç–∞: {callback_query.from_user.id}\n ‚îú –í –±–∞–Ω–∫–µ: {bank2}$\n ‚îú NORMcoin: {krypto2}\n ‚îî‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì ", parse_mode='html')


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)